//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34011
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 4.0.50826.0
// 
namespace Medical.Apartment.Silverlight.UI.ApartmentService {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserLogin", Namespace="http://schemas.datacontract.org/2004/07/Medical.Apartment.Web.UI")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Medical.Apartment.Silverlight.UI.ApartmentService.AppSettings))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Medical.Apartment.Silverlight.UI.ApartmentService.GlobalVariable))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<Medical.Apartment.Common.RoleComponentPermission>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Medical.Apartment.Common.RoleComponentPermission))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Medical.Apartment.Common.Record))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Medical.Apartment.Common.Organisation))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Medical.Apartment.Common.ContactInformation))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<Medical.Apartment.Common.UserRoleAuth>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Medical.Apartment.Common.UserRoleAuth))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Medical.Apartment.Common.Site))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Medical.Apartment.Common.TagVersion))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<Medical.Apartment.Common.Country>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Medical.Apartment.Common.Country))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<Medical.Apartment.Common.City>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Medical.Apartment.Common.City))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<Medical.Apartment.Common.District>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Medical.Apartment.Common.District))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<Medical.Apartment.Common.ContactInformation>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<Medical.Apartment.Common.Organisation>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<Medical.Apartment.Common.AspUser>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<Medical.Apartment.Common.Site>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<Medical.Apartment.Common.Customer>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Medical.Apartment.Common.Customer))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<Medical.Apartment.Common.Doctor>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Medical.Apartment.Common.Doctor))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<Medical.Apartment.Common.Component>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Medical.Apartment.Common.Component))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<Medical.Apartment.Common.AspRole>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Medical.Apartment.Common.AspRole))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<Medical.Apartment.Common.Medicine>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Medical.Apartment.Common.Medicine))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<Medical.Apartment.Common.MedicineInput>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Medical.Apartment.Common.MedicineInput))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<Medical.Apartment.Common.Service>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Medical.Apartment.Common.Service))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<Medical.Apartment.Common.Image>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Medical.Apartment.Common.Image))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<Medical.Apartment.Common.Treatment>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Medical.Apartment.Common.Treatment))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<Medical.Apartment.Common.TreatmentMedicine>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Medical.Apartment.Common.TreatmentMedicine))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<Medical.Apartment.Common.TreatmentService>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Medical.Apartment.Common.TreatmentService))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<System.Guid>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<string>))]
    public partial class UserLogin : object, System.ComponentModel.INotifyPropertyChanged {
        
        private Medical.Apartment.Common.AspUser AspUserField;
        
        private bool IsUserOrganisationAdministratorField;
        
        private bool IsUserPortalAdministratorField;
        
        private bool IsUserSecurityAdministratorField;
        
        private bool IsUserSiteAdministratorField;
        
        private System.Collections.Generic.List<Medical.Apartment.Common.RoleComponentPermission> RoleComponentPermissionsField;
        
        private System.Nullable<int> UserEmployeeIdField;
        
        private System.Collections.Generic.List<System.Guid> UserLicenseKeysField;
        
        private string UserNameField;
        
        private Medical.Apartment.Common.Organisation UserOrganisationField;
        
        private int UserOrganisationIdField;
        
        private System.Collections.Generic.List<Medical.Apartment.Common.UserRoleAuth> UserRoleAuthsField;
        
        private Medical.Apartment.Common.Site UserSiteField;
        
        private System.Nullable<int> UserSiteIdField;
        
        private System.Guid UserUserIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Medical.Apartment.Common.AspUser AspUser {
            get {
                return this.AspUserField;
            }
            set {
                if ((object.ReferenceEquals(this.AspUserField, value) != true)) {
                    this.AspUserField = value;
                    this.RaisePropertyChanged("AspUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsUserOrganisationAdministrator {
            get {
                return this.IsUserOrganisationAdministratorField;
            }
            set {
                if ((this.IsUserOrganisationAdministratorField.Equals(value) != true)) {
                    this.IsUserOrganisationAdministratorField = value;
                    this.RaisePropertyChanged("IsUserOrganisationAdministrator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsUserPortalAdministrator {
            get {
                return this.IsUserPortalAdministratorField;
            }
            set {
                if ((this.IsUserPortalAdministratorField.Equals(value) != true)) {
                    this.IsUserPortalAdministratorField = value;
                    this.RaisePropertyChanged("IsUserPortalAdministrator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsUserSecurityAdministrator {
            get {
                return this.IsUserSecurityAdministratorField;
            }
            set {
                if ((this.IsUserSecurityAdministratorField.Equals(value) != true)) {
                    this.IsUserSecurityAdministratorField = value;
                    this.RaisePropertyChanged("IsUserSecurityAdministrator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsUserSiteAdministrator {
            get {
                return this.IsUserSiteAdministratorField;
            }
            set {
                if ((this.IsUserSiteAdministratorField.Equals(value) != true)) {
                    this.IsUserSiteAdministratorField = value;
                    this.RaisePropertyChanged("IsUserSiteAdministrator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Medical.Apartment.Common.RoleComponentPermission> RoleComponentPermissions {
            get {
                return this.RoleComponentPermissionsField;
            }
            set {
                if ((object.ReferenceEquals(this.RoleComponentPermissionsField, value) != true)) {
                    this.RoleComponentPermissionsField = value;
                    this.RaisePropertyChanged("RoleComponentPermissions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> UserEmployeeId {
            get {
                return this.UserEmployeeIdField;
            }
            set {
                if ((this.UserEmployeeIdField.Equals(value) != true)) {
                    this.UserEmployeeIdField = value;
                    this.RaisePropertyChanged("UserEmployeeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<System.Guid> UserLicenseKeys {
            get {
                return this.UserLicenseKeysField;
            }
            set {
                if ((object.ReferenceEquals(this.UserLicenseKeysField, value) != true)) {
                    this.UserLicenseKeysField = value;
                    this.RaisePropertyChanged("UserLicenseKeys");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Medical.Apartment.Common.Organisation UserOrganisation {
            get {
                return this.UserOrganisationField;
            }
            set {
                if ((object.ReferenceEquals(this.UserOrganisationField, value) != true)) {
                    this.UserOrganisationField = value;
                    this.RaisePropertyChanged("UserOrganisation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserOrganisationId {
            get {
                return this.UserOrganisationIdField;
            }
            set {
                if ((this.UserOrganisationIdField.Equals(value) != true)) {
                    this.UserOrganisationIdField = value;
                    this.RaisePropertyChanged("UserOrganisationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Medical.Apartment.Common.UserRoleAuth> UserRoleAuths {
            get {
                return this.UserRoleAuthsField;
            }
            set {
                if ((object.ReferenceEquals(this.UserRoleAuthsField, value) != true)) {
                    this.UserRoleAuthsField = value;
                    this.RaisePropertyChanged("UserRoleAuths");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Medical.Apartment.Common.Site UserSite {
            get {
                return this.UserSiteField;
            }
            set {
                if ((object.ReferenceEquals(this.UserSiteField, value) != true)) {
                    this.UserSiteField = value;
                    this.RaisePropertyChanged("UserSite");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> UserSiteId {
            get {
                return this.UserSiteIdField;
            }
            set {
                if ((this.UserSiteIdField.Equals(value) != true)) {
                    this.UserSiteIdField = value;
                    this.RaisePropertyChanged("UserSiteId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid UserUserId {
            get {
                return this.UserUserIdField;
            }
            set {
                if ((this.UserUserIdField.Equals(value) != true)) {
                    this.UserUserIdField = value;
                    this.RaisePropertyChanged("UserUserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AppSettings", Namespace="http://schemas.datacontract.org/2004/07/Medical.Apartment.Web.UI")]
    public partial class AppSettings : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string DateTimeFormatCultureField;
        
        private decimal ExchangeRateField;
        
        private string GloblaCultureField;
        
        private string MainCurrencyField;
        
        private string NumberFormatCultureField;
        
        private string ReportLocalizationField;
        
        private string ReportServerUrlField;
        
        private string SecondCurrencyField;
        
        private string VirtualDirectoryField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DateTimeFormatCulture {
            get {
                return this.DateTimeFormatCultureField;
            }
            set {
                if ((object.ReferenceEquals(this.DateTimeFormatCultureField, value) != true)) {
                    this.DateTimeFormatCultureField = value;
                    this.RaisePropertyChanged("DateTimeFormatCulture");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ExchangeRate {
            get {
                return this.ExchangeRateField;
            }
            set {
                if ((this.ExchangeRateField.Equals(value) != true)) {
                    this.ExchangeRateField = value;
                    this.RaisePropertyChanged("ExchangeRate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GloblaCulture {
            get {
                return this.GloblaCultureField;
            }
            set {
                if ((object.ReferenceEquals(this.GloblaCultureField, value) != true)) {
                    this.GloblaCultureField = value;
                    this.RaisePropertyChanged("GloblaCulture");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MainCurrency {
            get {
                return this.MainCurrencyField;
            }
            set {
                if ((object.ReferenceEquals(this.MainCurrencyField, value) != true)) {
                    this.MainCurrencyField = value;
                    this.RaisePropertyChanged("MainCurrency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NumberFormatCulture {
            get {
                return this.NumberFormatCultureField;
            }
            set {
                if ((object.ReferenceEquals(this.NumberFormatCultureField, value) != true)) {
                    this.NumberFormatCultureField = value;
                    this.RaisePropertyChanged("NumberFormatCulture");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReportLocalization {
            get {
                return this.ReportLocalizationField;
            }
            set {
                if ((object.ReferenceEquals(this.ReportLocalizationField, value) != true)) {
                    this.ReportLocalizationField = value;
                    this.RaisePropertyChanged("ReportLocalization");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReportServerUrl {
            get {
                return this.ReportServerUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.ReportServerUrlField, value) != true)) {
                    this.ReportServerUrlField = value;
                    this.RaisePropertyChanged("ReportServerUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SecondCurrency {
            get {
                return this.SecondCurrencyField;
            }
            set {
                if ((object.ReferenceEquals(this.SecondCurrencyField, value) != true)) {
                    this.SecondCurrencyField = value;
                    this.RaisePropertyChanged("SecondCurrency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VirtualDirectory {
            get {
                return this.VirtualDirectoryField;
            }
            set {
                if ((object.ReferenceEquals(this.VirtualDirectoryField, value) != true)) {
                    this.VirtualDirectoryField = value;
                    this.RaisePropertyChanged("VirtualDirectory");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GlobalVariable", Namespace="http://schemas.datacontract.org/2004/07/Medical.Apartment.Web.UI")]
    public partial class GlobalVariable : object, System.ComponentModel.INotifyPropertyChanged {
        
        private Medical.Apartment.Silverlight.UI.ApartmentService.AppSettings AppSettingsField;
        
        private Medical.Apartment.Common.TagVersion TagVersionField;
        
        private Medical.Apartment.Silverlight.UI.ApartmentService.UserLogin UserLoginField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Medical.Apartment.Silverlight.UI.ApartmentService.AppSettings AppSettings {
            get {
                return this.AppSettingsField;
            }
            set {
                if ((object.ReferenceEquals(this.AppSettingsField, value) != true)) {
                    this.AppSettingsField = value;
                    this.RaisePropertyChanged("AppSettings");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Medical.Apartment.Common.TagVersion TagVersion {
            get {
                return this.TagVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.TagVersionField, value) != true)) {
                    this.TagVersionField = value;
                    this.RaisePropertyChanged("TagVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Medical.Apartment.Silverlight.UI.ApartmentService.UserLogin UserLogin {
            get {
                return this.UserLoginField;
            }
            set {
                if ((object.ReferenceEquals(this.UserLoginField, value) != true)) {
                    this.UserLoginField = value;
                    this.RaisePropertyChanged("UserLogin");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="", ConfigurationName="ApartmentService.ApartmentService")]
    public interface ApartmentService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:ApartmentService/SelectSessionId", ReplyAction="urn:ApartmentService/SelectSessionIdResponse")]
        System.IAsyncResult BeginSelectSessionId(System.AsyncCallback callback, object asyncState);
        
        string EndSelectSessionId(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:ApartmentService/GetUserLogin", ReplyAction="urn:ApartmentService/GetUserLoginResponse")]
        System.IAsyncResult BeginGetUserLogin(System.AsyncCallback callback, object asyncState);
        
        Medical.Apartment.Silverlight.UI.ApartmentService.UserLogin EndGetUserLogin(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:ApartmentService/GetAppSettings", ReplyAction="urn:ApartmentService/GetAppSettingsResponse")]
        System.IAsyncResult BeginGetAppSettings(System.AsyncCallback callback, object asyncState);
        
        Medical.Apartment.Silverlight.UI.ApartmentService.AppSettings EndGetAppSettings(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:ApartmentService/GetGlobalVariable", ReplyAction="urn:ApartmentService/GetGlobalVariableResponse")]
        System.IAsyncResult BeginGetGlobalVariable(System.AsyncCallback callback, object asyncState);
        
        Medical.Apartment.Silverlight.UI.ApartmentService.GlobalVariable EndGetGlobalVariable(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:ApartmentService/ChangePassword", ReplyAction="urn:ApartmentService/ChangePasswordResponse")]
        System.IAsyncResult BeginChangePassword(string oldPassword, string newPassword, System.AsyncCallback callback, object asyncState);
        
        int EndChangePassword(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:ApartmentService/GetAspUser", ReplyAction="urn:ApartmentService/GetAspUserResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Medical.Apartment.Silverlight.UI.ApartmentService.UserLogin))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Medical.Apartment.Silverlight.UI.ApartmentService.AppSettings))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Medical.Apartment.Silverlight.UI.ApartmentService.GlobalVariable))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<Medical.Apartment.Common.RoleComponentPermission>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Medical.Apartment.Common.RoleComponentPermission))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Medical.Apartment.Common.Record))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Medical.Apartment.Common.Organisation))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Medical.Apartment.Common.ContactInformation))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<Medical.Apartment.Common.UserRoleAuth>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Medical.Apartment.Common.UserRoleAuth))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Medical.Apartment.Common.Site))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Medical.Apartment.Common.TagVersion))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<Medical.Apartment.Common.Country>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Medical.Apartment.Common.Country))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<Medical.Apartment.Common.City>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Medical.Apartment.Common.City))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<Medical.Apartment.Common.District>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Medical.Apartment.Common.District))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<Medical.Apartment.Common.ContactInformation>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<Medical.Apartment.Common.Organisation>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<Medical.Apartment.Common.AspUser>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<Medical.Apartment.Common.Site>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<Medical.Apartment.Common.Customer>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Medical.Apartment.Common.Customer))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<Medical.Apartment.Common.Doctor>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Medical.Apartment.Common.Doctor))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<Medical.Apartment.Common.Component>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Medical.Apartment.Common.Component))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<Medical.Apartment.Common.AspRole>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Medical.Apartment.Common.AspRole))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<Medical.Apartment.Common.Medicine>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Medical.Apartment.Common.Medicine))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<Medical.Apartment.Common.MedicineInput>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Medical.Apartment.Common.MedicineInput))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<Medical.Apartment.Common.Service>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Medical.Apartment.Common.Service))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<Medical.Apartment.Common.Image>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Medical.Apartment.Common.Image))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<Medical.Apartment.Common.Treatment>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Medical.Apartment.Common.Treatment))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<Medical.Apartment.Common.TreatmentMedicine>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Medical.Apartment.Common.TreatmentMedicine))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<Medical.Apartment.Common.TreatmentService>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Medical.Apartment.Common.TreatmentService))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<System.Guid>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<string>))]
        System.IAsyncResult BeginGetAspUser(System.Guid userId, System.AsyncCallback callback, object asyncState);
        
        Medical.Apartment.Common.AspUser EndGetAspUser(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:ApartmentService/DeleteAspUser", ReplyAction="urn:ApartmentService/DeleteAspUserResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Medical.Apartment.Silverlight.UI.ApartmentService.UserLogin))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Medical.Apartment.Silverlight.UI.ApartmentService.AppSettings))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Medical.Apartment.Silverlight.UI.ApartmentService.GlobalVariable))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<Medical.Apartment.Common.RoleComponentPermission>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Medical.Apartment.Common.RoleComponentPermission))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Medical.Apartment.Common.Record))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Medical.Apartment.Common.Organisation))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Medical.Apartment.Common.ContactInformation))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<Medical.Apartment.Common.UserRoleAuth>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Medical.Apartment.Common.UserRoleAuth))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Medical.Apartment.Common.Site))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Medical.Apartment.Common.TagVersion))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<Medical.Apartment.Common.Country>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Medical.Apartment.Common.Country))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<Medical.Apartment.Common.City>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Medical.Apartment.Common.City))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<Medical.Apartment.Common.District>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Medical.Apartment.Common.District))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<Medical.Apartment.Common.ContactInformation>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<Medical.Apartment.Common.Organisation>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<Medical.Apartment.Common.AspUser>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<Medical.Apartment.Common.Site>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<Medical.Apartment.Common.Customer>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Medical.Apartment.Common.Customer))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<Medical.Apartment.Common.Doctor>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Medical.Apartment.Common.Doctor))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<Medical.Apartment.Common.Component>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Medical.Apartment.Common.Component))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<Medical.Apartment.Common.AspRole>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Medical.Apartment.Common.AspRole))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<Medical.Apartment.Common.Medicine>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Medical.Apartment.Common.Medicine))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<Medical.Apartment.Common.MedicineInput>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Medical.Apartment.Common.MedicineInput))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<Medical.Apartment.Common.Service>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Medical.Apartment.Common.Service))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<Medical.Apartment.Common.Image>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Medical.Apartment.Common.Image))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<Medical.Apartment.Common.Treatment>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Medical.Apartment.Common.Treatment))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<Medical.Apartment.Common.TreatmentMedicine>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Medical.Apartment.Common.TreatmentMedicine))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<Medical.Apartment.Common.TreatmentService>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Medical.Apartment.Common.TreatmentService))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<System.Guid>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<string>))]
        System.IAsyncResult BeginDeleteAspUser(Medical.Apartment.Common.AspUser aspUser, System.Nullable<long> employeeId, System.AsyncCallback callback, object asyncState);
        
        bool EndDeleteAspUser(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:ApartmentService/UnlockAspUser", ReplyAction="urn:ApartmentService/UnlockAspUserResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Medical.Apartment.Silverlight.UI.ApartmentService.UserLogin))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Medical.Apartment.Silverlight.UI.ApartmentService.AppSettings))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Medical.Apartment.Silverlight.UI.ApartmentService.GlobalVariable))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<Medical.Apartment.Common.RoleComponentPermission>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Medical.Apartment.Common.RoleComponentPermission))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Medical.Apartment.Common.Record))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Medical.Apartment.Common.Organisation))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Medical.Apartment.Common.ContactInformation))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<Medical.Apartment.Common.UserRoleAuth>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Medical.Apartment.Common.UserRoleAuth))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Medical.Apartment.Common.Site))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Medical.Apartment.Common.TagVersion))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<Medical.Apartment.Common.Country>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Medical.Apartment.Common.Country))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<Medical.Apartment.Common.City>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Medical.Apartment.Common.City))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<Medical.Apartment.Common.District>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Medical.Apartment.Common.District))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<Medical.Apartment.Common.ContactInformation>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<Medical.Apartment.Common.Organisation>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<Medical.Apartment.Common.AspUser>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<Medical.Apartment.Common.Site>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<Medical.Apartment.Common.Customer>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Medical.Apartment.Common.Customer))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<Medical.Apartment.Common.Doctor>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Medical.Apartment.Common.Doctor))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<Medical.Apartment.Common.Component>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Medical.Apartment.Common.Component))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<Medical.Apartment.Common.AspRole>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Medical.Apartment.Common.AspRole))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<Medical.Apartment.Common.Medicine>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Medical.Apartment.Common.Medicine))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<Medical.Apartment.Common.MedicineInput>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Medical.Apartment.Common.MedicineInput))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<Medical.Apartment.Common.Service>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Medical.Apartment.Common.Service))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<Medical.Apartment.Common.Image>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Medical.Apartment.Common.Image))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<Medical.Apartment.Common.Treatment>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Medical.Apartment.Common.Treatment))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<Medical.Apartment.Common.TreatmentMedicine>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Medical.Apartment.Common.TreatmentMedicine))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<Medical.Apartment.Common.TreatmentService>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Medical.Apartment.Common.TreatmentService))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<System.Guid>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<string>))]
        System.IAsyncResult BeginUnlockAspUser(Medical.Apartment.Common.AspUser oldUser, System.AsyncCallback callback, object asyncState);
        
        Medical.Apartment.Common.AspUser EndUnlockAspUser(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:ApartmentService/SaveAspUser", ReplyAction="urn:ApartmentService/SaveAspUserResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Medical.Apartment.Silverlight.UI.ApartmentService.UserLogin))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Medical.Apartment.Silverlight.UI.ApartmentService.AppSettings))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Medical.Apartment.Silverlight.UI.ApartmentService.GlobalVariable))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<Medical.Apartment.Common.RoleComponentPermission>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Medical.Apartment.Common.RoleComponentPermission))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Medical.Apartment.Common.Record))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Medical.Apartment.Common.Organisation))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Medical.Apartment.Common.ContactInformation))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<Medical.Apartment.Common.UserRoleAuth>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Medical.Apartment.Common.UserRoleAuth))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Medical.Apartment.Common.Site))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Medical.Apartment.Common.TagVersion))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<Medical.Apartment.Common.Country>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Medical.Apartment.Common.Country))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<Medical.Apartment.Common.City>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Medical.Apartment.Common.City))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<Medical.Apartment.Common.District>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Medical.Apartment.Common.District))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<Medical.Apartment.Common.ContactInformation>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<Medical.Apartment.Common.Organisation>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<Medical.Apartment.Common.AspUser>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<Medical.Apartment.Common.Site>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<Medical.Apartment.Common.Customer>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Medical.Apartment.Common.Customer))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<Medical.Apartment.Common.Doctor>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Medical.Apartment.Common.Doctor))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<Medical.Apartment.Common.Component>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Medical.Apartment.Common.Component))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<Medical.Apartment.Common.AspRole>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Medical.Apartment.Common.AspRole))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<Medical.Apartment.Common.Medicine>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Medical.Apartment.Common.Medicine))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<Medical.Apartment.Common.MedicineInput>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Medical.Apartment.Common.MedicineInput))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<Medical.Apartment.Common.Service>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Medical.Apartment.Common.Service))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<Medical.Apartment.Common.Image>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Medical.Apartment.Common.Image))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<Medical.Apartment.Common.Treatment>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Medical.Apartment.Common.Treatment))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<Medical.Apartment.Common.TreatmentMedicine>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Medical.Apartment.Common.TreatmentMedicine))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<Medical.Apartment.Common.TreatmentService>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Medical.Apartment.Common.TreatmentService))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<System.Guid>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<string>))]
        System.IAsyncResult BeginSaveAspUser(Medical.Apartment.Common.AspUser saveUser, System.AsyncCallback callback, object asyncState);
        
        Medical.Apartment.Common.AspUser EndSaveAspUser(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:ApartmentService/ListCountry", ReplyAction="urn:ApartmentService/ListCountryResponse")]
        System.IAsyncResult BeginListCountry(System.Nullable<int> countryId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<Medical.Apartment.Common.Country> EndListCountry(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:ApartmentService/ListCity", ReplyAction="urn:ApartmentService/ListCityResponse")]
        System.IAsyncResult BeginListCity(System.Nullable<int> countryid, System.Nullable<int> cityId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<Medical.Apartment.Common.City> EndListCity(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:ApartmentService/ListDistrict", ReplyAction="urn:ApartmentService/ListDistrictResponse")]
        System.IAsyncResult BeginListDistrict(System.Nullable<int> cityId, System.Nullable<int> districtId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<Medical.Apartment.Common.District> EndListDistrict(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:ApartmentService/ListContactInformation", ReplyAction="urn:ApartmentService/ListContactInformationResponse")]
        System.IAsyncResult BeginListContactInformation(System.Nullable<int> contactInfoId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<Medical.Apartment.Common.ContactInformation> EndListContactInformation(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:ApartmentService/SaveContactInformation", ReplyAction="urn:ApartmentService/SaveContactInformationResponse")]
        System.IAsyncResult BeginSaveContactInformation(System.Collections.Generic.List<Medical.Apartment.Common.ContactInformation> saveList, System.AsyncCallback callback, object asyncState);
        
        void EndSaveContactInformation(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:ApartmentService/ListOrganisation", ReplyAction="urn:ApartmentService/ListOrganisationResponse")]
        System.IAsyncResult BeginListOrganisation(System.Nullable<System.Guid> roleId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<Medical.Apartment.Common.Organisation> EndListOrganisation(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:ApartmentService/ListOrgAdminAspUser", ReplyAction="urn:ApartmentService/ListOrgAdminAspUserResponse")]
        System.IAsyncResult BeginListOrgAdminAspUser(int orgId, System.Guid roleId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<Medical.Apartment.Common.AspUser> EndListOrgAdminAspUser(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:ApartmentService/SaveOrganisations", ReplyAction="urn:ApartmentService/SaveOrganisationsResponse")]
        System.IAsyncResult BeginSaveOrganisations(System.Collections.Generic.List<Medical.Apartment.Common.Organisation> saveList, System.AsyncCallback callback, object asyncState);
        
        void EndSaveOrganisations(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:ApartmentService/GetOrganisation", ReplyAction="urn:ApartmentService/GetOrganisationResponse")]
        System.IAsyncResult BeginGetOrganisation(int organisationId, System.AsyncCallback callback, object asyncState);
        
        Medical.Apartment.Common.Organisation EndGetOrganisation(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:ApartmentService/GetOrganisationByCode", ReplyAction="urn:ApartmentService/GetOrganisationByCodeResponse")]
        System.IAsyncResult BeginGetOrganisationByCode(string authorisationCode, System.AsyncCallback callback, object asyncState);
        
        Medical.Apartment.Common.Organisation EndGetOrganisationByCode(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:ApartmentService/ListSite", ReplyAction="urn:ApartmentService/ListSiteResponse")]
        System.IAsyncResult BeginListSite(System.Nullable<int> orgId, System.Nullable<int> siteId, bool showLegacy, bool loadContact, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<Medical.Apartment.Common.Site> EndListSite(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:ApartmentService/SaveSite", ReplyAction="urn:ApartmentService/SaveSiteResponse")]
        System.IAsyncResult BeginSaveSite(System.Collections.Generic.List<Medical.Apartment.Common.Site> saveList, System.AsyncCallback callback, object asyncState);
        
        void EndSaveSite(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:ApartmentService/ListCustomer", ReplyAction="urn:ApartmentService/ListCustomerResponse")]
        System.IAsyncResult BeginListCustomer(System.Nullable<int> orgId, System.Nullable<int> siteId, System.Nullable<int> customerId, string firstName, string lastName, bool hasContracts, System.Nullable<System.DateTime> contractDateStart, System.Nullable<System.DateTime> contractDateEnd, bool includeLegacy, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<Medical.Apartment.Common.Customer> EndListCustomer(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:ApartmentService/SaveCustomer", ReplyAction="urn:ApartmentService/SaveCustomerResponse")]
        System.IAsyncResult BeginSaveCustomer(System.Collections.Generic.List<Medical.Apartment.Common.Customer> saveList, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<Medical.Apartment.Common.Customer> EndSaveCustomer(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:ApartmentService/ListDoctor", ReplyAction="urn:ApartmentService/ListDoctorResponse")]
        System.IAsyncResult BeginListDoctor(System.Nullable<int> orgId, System.Nullable<int> siteId, System.Nullable<int> doctorId, string firstName, string lastName, bool includeLegacy, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<Medical.Apartment.Common.Doctor> EndListDoctor(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:ApartmentService/SaveDoctor", ReplyAction="urn:ApartmentService/SaveDoctorResponse")]
        System.IAsyncResult BeginSaveDoctor(System.Collections.Generic.List<Medical.Apartment.Common.Doctor> saveList, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<Medical.Apartment.Common.Doctor> EndSaveDoctor(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:ApartmentService/ListAspUser", ReplyAction="urn:ApartmentService/ListAspUserResponse")]
        System.IAsyncResult BeginListAspUser(System.Nullable<int> orgId, System.Nullable<System.Guid> userId, System.Nullable<bool> isLegacy, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<Medical.Apartment.Common.AspUser> EndListAspUser(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:ApartmentService/ListUserName", ReplyAction="urn:ApartmentService/ListUserNameResponse")]
        System.IAsyncResult BeginListUserName(string applicationName, System.Nullable<int> orgId, string startsWith, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<string> EndListUserName(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:ApartmentService/UpdateMembershipUserName", ReplyAction="urn:ApartmentService/UpdateMembershipUserNameResponse")]
        System.IAsyncResult BeginUpdateMembershipUserName(string applicationName, string userName, string newUserName, System.AsyncCallback callback, object asyncState);
        
        System.Nullable<int> EndUpdateMembershipUserName(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:ApartmentService/ListComponent", ReplyAction="urn:ApartmentService/ListComponentResponse")]
        System.IAsyncResult BeginListComponent(System.Nullable<int> componentId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<Medical.Apartment.Common.Component> EndListComponent(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:ApartmentService/ListRoleComponentPermission", ReplyAction="urn:ApartmentService/ListRoleComponentPermissionResponse")]
        System.IAsyncResult BeginListRoleComponentPermission(System.Nullable<System.Guid> roleId, System.Nullable<int> componentId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<Medical.Apartment.Common.RoleComponentPermission> EndListRoleComponentPermission(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:ApartmentService/ListRoleComponentPermissionByUser", ReplyAction="urn:ApartmentService/ListRoleComponentPermissionByUserResponse")]
        System.IAsyncResult BeginListRoleComponentPermissionByUser(System.Nullable<System.Guid> userId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<Medical.Apartment.Common.RoleComponentPermission> EndListRoleComponentPermissionByUser(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:ApartmentService/SaveRoleComponentPermission", ReplyAction="urn:ApartmentService/SaveRoleComponentPermissionResponse")]
        System.IAsyncResult BeginSaveRoleComponentPermission(System.Collections.Generic.List<Medical.Apartment.Common.RoleComponentPermission> saveList, System.AsyncCallback callback, object asyncState);
        
        void EndSaveRoleComponentPermission(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:ApartmentService/ListAspRole", ReplyAction="urn:ApartmentService/ListAspRoleResponse")]
        System.IAsyncResult BeginListAspRole(System.Nullable<System.Guid> roleId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<Medical.Apartment.Common.AspRole> EndListAspRole(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:ApartmentService/SaveAspRole", ReplyAction="urn:ApartmentService/SaveAspRoleResponse")]
        System.IAsyncResult BeginSaveAspRole(System.Collections.Generic.List<Medical.Apartment.Common.AspRole> saveList, string currentUser, System.AsyncCallback callback, object asyncState);
        
        void EndSaveAspRole(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:ApartmentService/ListUserRoleAuth", ReplyAction="urn:ApartmentService/ListUserRoleAuthResponse")]
        System.IAsyncResult BeginListUserRoleAuth(System.Nullable<int> orgId, System.Nullable<System.Guid> userId, System.Nullable<System.Guid> roleId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<Medical.Apartment.Common.UserRoleAuth> EndListUserRoleAuth(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:ApartmentService/SaveUserRoleAuth", ReplyAction="urn:ApartmentService/SaveUserRoleAuthResponse")]
        System.IAsyncResult BeginSaveUserRoleAuth(System.Collections.Generic.List<Medical.Apartment.Common.UserRoleAuth> saveList, System.AsyncCallback callback, object asyncState);
        
        void EndSaveUserRoleAuth(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:ApartmentService/ListMedicine", ReplyAction="urn:ApartmentService/ListMedicineResponse")]
        System.IAsyncResult BeginListMedicine(System.Nullable<int> organisationId, System.Nullable<int> medicineId, bool showLegacy, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<Medical.Apartment.Common.Medicine> EndListMedicine(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:ApartmentService/SaveMedicine", ReplyAction="urn:ApartmentService/SaveMedicineResponse")]
        System.IAsyncResult BeginSaveMedicine(System.Collections.Generic.List<Medical.Apartment.Common.Medicine> saveList, System.AsyncCallback callback, object asyncState);
        
        void EndSaveMedicine(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:ApartmentService/ListSiteMedicineStatus", ReplyAction="urn:ApartmentService/ListSiteMedicineStatusResponse")]
        System.IAsyncResult BeginListSiteMedicineStatus(int siteId, System.Nullable<int> medicineId, System.DateTime dateFrom, System.DateTime dateTo, bool showLegacy, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<Medical.Apartment.Common.Medicine> EndListSiteMedicineStatus(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:ApartmentService/ListMedicineInput", ReplyAction="urn:ApartmentService/ListMedicineInputResponse")]
        System.IAsyncResult BeginListMedicineInput(int siteId, System.Nullable<int> medicineId, System.DateTime dateFrom, System.DateTime dateTo, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<Medical.Apartment.Common.MedicineInput> EndListMedicineInput(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:ApartmentService/SaveMedicineInput", ReplyAction="urn:ApartmentService/SaveMedicineInputResponse")]
        System.IAsyncResult BeginSaveMedicineInput(System.Collections.Generic.List<Medical.Apartment.Common.MedicineInput> saveList, System.AsyncCallback callback, object asyncState);
        
        void EndSaveMedicineInput(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:ApartmentService/ListService", ReplyAction="urn:ApartmentService/ListServiceResponse")]
        System.IAsyncResult BeginListService(System.Nullable<int> organisationId, System.Nullable<int> serviceId, bool showLegacy, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<Medical.Apartment.Common.Service> EndListService(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:ApartmentService/SaveService", ReplyAction="urn:ApartmentService/SaveServiceResponse")]
        System.IAsyncResult BeginSaveService(System.Collections.Generic.List<Medical.Apartment.Common.Service> saveList, System.AsyncCallback callback, object asyncState);
        
        void EndSaveService(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:ApartmentService/ListImage", ReplyAction="urn:ApartmentService/ListImageResponse")]
        System.IAsyncResult BeginListImage(System.Nullable<int> imageId, System.Nullable<int> itemId, System.Nullable<int> imageTypeId, int loadType, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<Medical.Apartment.Common.Image> EndListImage(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:ApartmentService/SaveImage", ReplyAction="urn:ApartmentService/SaveImageResponse")]
        System.IAsyncResult BeginSaveImage(System.Collections.Generic.List<Medical.Apartment.Common.Image> saveList, System.AsyncCallback callback, object asyncState);
        
        void EndSaveImage(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:ApartmentService/ListTreatment", ReplyAction="urn:ApartmentService/ListTreatmentResponse")]
        System.IAsyncResult BeginListTreatment(int orgId, System.Nullable<int> siteId, System.Nullable<int> customerId, System.Nullable<int> doctorId, System.Nullable<int> treatmentId, System.Nullable<System.DateTime> dateStart, System.Nullable<System.DateTime> dateEnd, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<Medical.Apartment.Common.Treatment> EndListTreatment(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:ApartmentService/SaveTreatment", ReplyAction="urn:ApartmentService/SaveTreatmentResponse")]
        System.IAsyncResult BeginSaveTreatment(System.Collections.Generic.List<Medical.Apartment.Common.Treatment> saveList, System.AsyncCallback callback, object asyncState);
        
        void EndSaveTreatment(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:ApartmentService/ListTreatmentMedicine", ReplyAction="urn:ApartmentService/ListTreatmentMedicineResponse")]
        System.IAsyncResult BeginListTreatmentMedicine(System.Nullable<int> treatmentMedicineId, System.Nullable<int> treatmnentId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<Medical.Apartment.Common.TreatmentMedicine> EndListTreatmentMedicine(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:ApartmentService/SaveTreatmentMedicine", ReplyAction="urn:ApartmentService/SaveTreatmentMedicineResponse")]
        System.IAsyncResult BeginSaveTreatmentMedicine(System.Collections.Generic.List<Medical.Apartment.Common.TreatmentMedicine> saveList, System.AsyncCallback callback, object asyncState);
        
        void EndSaveTreatmentMedicine(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:ApartmentService/ListTreatmentService", ReplyAction="urn:ApartmentService/ListTreatmentServiceResponse")]
        System.IAsyncResult BeginListTreatmentService(System.Nullable<int> treatmentServiceId, System.Nullable<int> treatmnentId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<Medical.Apartment.Common.TreatmentService> EndListTreatmentService(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:ApartmentService/SaveTreatmentService", ReplyAction="urn:ApartmentService/SaveTreatmentServiceResponse")]
        System.IAsyncResult BeginSaveTreatmentService(System.Collections.Generic.List<Medical.Apartment.Common.TreatmentService> saveList, System.AsyncCallback callback, object asyncState);
        
        void EndSaveTreatmentService(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ApartmentServiceChannel : Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SelectSessionIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SelectSessionIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetUserLoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetUserLoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Medical.Apartment.Silverlight.UI.ApartmentService.UserLogin Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Medical.Apartment.Silverlight.UI.ApartmentService.UserLogin)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAppSettingsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAppSettingsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Medical.Apartment.Silverlight.UI.ApartmentService.AppSettings Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Medical.Apartment.Silverlight.UI.ApartmentService.AppSettings)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetGlobalVariableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetGlobalVariableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Medical.Apartment.Silverlight.UI.ApartmentService.GlobalVariable Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Medical.Apartment.Silverlight.UI.ApartmentService.GlobalVariable)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ChangePasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ChangePasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAspUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAspUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Medical.Apartment.Common.AspUser Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Medical.Apartment.Common.AspUser)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeleteAspUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeleteAspUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UnlockAspUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UnlockAspUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Medical.Apartment.Common.AspUser Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Medical.Apartment.Common.AspUser)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SaveAspUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SaveAspUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Medical.Apartment.Common.AspUser Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Medical.Apartment.Common.AspUser)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ListCountryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ListCountryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<Medical.Apartment.Common.Country> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<Medical.Apartment.Common.Country>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ListCityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ListCityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<Medical.Apartment.Common.City> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<Medical.Apartment.Common.City>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ListDistrictCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ListDistrictCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<Medical.Apartment.Common.District> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<Medical.Apartment.Common.District>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ListContactInformationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ListContactInformationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<Medical.Apartment.Common.ContactInformation> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<Medical.Apartment.Common.ContactInformation>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ListOrganisationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ListOrganisationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<Medical.Apartment.Common.Organisation> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<Medical.Apartment.Common.Organisation>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ListOrgAdminAspUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ListOrgAdminAspUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<Medical.Apartment.Common.AspUser> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<Medical.Apartment.Common.AspUser>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetOrganisationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetOrganisationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Medical.Apartment.Common.Organisation Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Medical.Apartment.Common.Organisation)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetOrganisationByCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetOrganisationByCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Medical.Apartment.Common.Organisation Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Medical.Apartment.Common.Organisation)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ListSiteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ListSiteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<Medical.Apartment.Common.Site> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<Medical.Apartment.Common.Site>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ListCustomerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ListCustomerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<Medical.Apartment.Common.Customer> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<Medical.Apartment.Common.Customer>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SaveCustomerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SaveCustomerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<Medical.Apartment.Common.Customer> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<Medical.Apartment.Common.Customer>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ListDoctorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ListDoctorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<Medical.Apartment.Common.Doctor> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<Medical.Apartment.Common.Doctor>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SaveDoctorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SaveDoctorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<Medical.Apartment.Common.Doctor> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<Medical.Apartment.Common.Doctor>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ListAspUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ListAspUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<Medical.Apartment.Common.AspUser> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<Medical.Apartment.Common.AspUser>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ListUserNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ListUserNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<string> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<string>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateMembershipUserNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateMembershipUserNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Nullable<int> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Nullable<int>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ListComponentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ListComponentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<Medical.Apartment.Common.Component> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<Medical.Apartment.Common.Component>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ListRoleComponentPermissionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ListRoleComponentPermissionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<Medical.Apartment.Common.RoleComponentPermission> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<Medical.Apartment.Common.RoleComponentPermission>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ListRoleComponentPermissionByUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ListRoleComponentPermissionByUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<Medical.Apartment.Common.RoleComponentPermission> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<Medical.Apartment.Common.RoleComponentPermission>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ListAspRoleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ListAspRoleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<Medical.Apartment.Common.AspRole> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<Medical.Apartment.Common.AspRole>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ListUserRoleAuthCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ListUserRoleAuthCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<Medical.Apartment.Common.UserRoleAuth> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<Medical.Apartment.Common.UserRoleAuth>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ListMedicineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ListMedicineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<Medical.Apartment.Common.Medicine> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<Medical.Apartment.Common.Medicine>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ListSiteMedicineStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ListSiteMedicineStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<Medical.Apartment.Common.Medicine> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<Medical.Apartment.Common.Medicine>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ListMedicineInputCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ListMedicineInputCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<Medical.Apartment.Common.MedicineInput> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<Medical.Apartment.Common.MedicineInput>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ListServiceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ListServiceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<Medical.Apartment.Common.Service> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<Medical.Apartment.Common.Service>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ListImageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ListImageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<Medical.Apartment.Common.Image> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<Medical.Apartment.Common.Image>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ListTreatmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ListTreatmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<Medical.Apartment.Common.Treatment> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<Medical.Apartment.Common.Treatment>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ListTreatmentMedicineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ListTreatmentMedicineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<Medical.Apartment.Common.TreatmentMedicine> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<Medical.Apartment.Common.TreatmentMedicine>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ListTreatmentServiceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ListTreatmentServiceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<Medical.Apartment.Common.TreatmentService> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<Medical.Apartment.Common.TreatmentService>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ApartmentServiceClient : System.ServiceModel.ClientBase<Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService>, Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService {
        
        private BeginOperationDelegate onBeginSelectSessionIdDelegate;
        
        private EndOperationDelegate onEndSelectSessionIdDelegate;
        
        private System.Threading.SendOrPostCallback onSelectSessionIdCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetUserLoginDelegate;
        
        private EndOperationDelegate onEndGetUserLoginDelegate;
        
        private System.Threading.SendOrPostCallback onGetUserLoginCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAppSettingsDelegate;
        
        private EndOperationDelegate onEndGetAppSettingsDelegate;
        
        private System.Threading.SendOrPostCallback onGetAppSettingsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetGlobalVariableDelegate;
        
        private EndOperationDelegate onEndGetGlobalVariableDelegate;
        
        private System.Threading.SendOrPostCallback onGetGlobalVariableCompletedDelegate;
        
        private BeginOperationDelegate onBeginChangePasswordDelegate;
        
        private EndOperationDelegate onEndChangePasswordDelegate;
        
        private System.Threading.SendOrPostCallback onChangePasswordCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAspUserDelegate;
        
        private EndOperationDelegate onEndGetAspUserDelegate;
        
        private System.Threading.SendOrPostCallback onGetAspUserCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteAspUserDelegate;
        
        private EndOperationDelegate onEndDeleteAspUserDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteAspUserCompletedDelegate;
        
        private BeginOperationDelegate onBeginUnlockAspUserDelegate;
        
        private EndOperationDelegate onEndUnlockAspUserDelegate;
        
        private System.Threading.SendOrPostCallback onUnlockAspUserCompletedDelegate;
        
        private BeginOperationDelegate onBeginSaveAspUserDelegate;
        
        private EndOperationDelegate onEndSaveAspUserDelegate;
        
        private System.Threading.SendOrPostCallback onSaveAspUserCompletedDelegate;
        
        private BeginOperationDelegate onBeginListCountryDelegate;
        
        private EndOperationDelegate onEndListCountryDelegate;
        
        private System.Threading.SendOrPostCallback onListCountryCompletedDelegate;
        
        private BeginOperationDelegate onBeginListCityDelegate;
        
        private EndOperationDelegate onEndListCityDelegate;
        
        private System.Threading.SendOrPostCallback onListCityCompletedDelegate;
        
        private BeginOperationDelegate onBeginListDistrictDelegate;
        
        private EndOperationDelegate onEndListDistrictDelegate;
        
        private System.Threading.SendOrPostCallback onListDistrictCompletedDelegate;
        
        private BeginOperationDelegate onBeginListContactInformationDelegate;
        
        private EndOperationDelegate onEndListContactInformationDelegate;
        
        private System.Threading.SendOrPostCallback onListContactInformationCompletedDelegate;
        
        private BeginOperationDelegate onBeginSaveContactInformationDelegate;
        
        private EndOperationDelegate onEndSaveContactInformationDelegate;
        
        private System.Threading.SendOrPostCallback onSaveContactInformationCompletedDelegate;
        
        private BeginOperationDelegate onBeginListOrganisationDelegate;
        
        private EndOperationDelegate onEndListOrganisationDelegate;
        
        private System.Threading.SendOrPostCallback onListOrganisationCompletedDelegate;
        
        private BeginOperationDelegate onBeginListOrgAdminAspUserDelegate;
        
        private EndOperationDelegate onEndListOrgAdminAspUserDelegate;
        
        private System.Threading.SendOrPostCallback onListOrgAdminAspUserCompletedDelegate;
        
        private BeginOperationDelegate onBeginSaveOrganisationsDelegate;
        
        private EndOperationDelegate onEndSaveOrganisationsDelegate;
        
        private System.Threading.SendOrPostCallback onSaveOrganisationsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetOrganisationDelegate;
        
        private EndOperationDelegate onEndGetOrganisationDelegate;
        
        private System.Threading.SendOrPostCallback onGetOrganisationCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetOrganisationByCodeDelegate;
        
        private EndOperationDelegate onEndGetOrganisationByCodeDelegate;
        
        private System.Threading.SendOrPostCallback onGetOrganisationByCodeCompletedDelegate;
        
        private BeginOperationDelegate onBeginListSiteDelegate;
        
        private EndOperationDelegate onEndListSiteDelegate;
        
        private System.Threading.SendOrPostCallback onListSiteCompletedDelegate;
        
        private BeginOperationDelegate onBeginSaveSiteDelegate;
        
        private EndOperationDelegate onEndSaveSiteDelegate;
        
        private System.Threading.SendOrPostCallback onSaveSiteCompletedDelegate;
        
        private BeginOperationDelegate onBeginListCustomerDelegate;
        
        private EndOperationDelegate onEndListCustomerDelegate;
        
        private System.Threading.SendOrPostCallback onListCustomerCompletedDelegate;
        
        private BeginOperationDelegate onBeginSaveCustomerDelegate;
        
        private EndOperationDelegate onEndSaveCustomerDelegate;
        
        private System.Threading.SendOrPostCallback onSaveCustomerCompletedDelegate;
        
        private BeginOperationDelegate onBeginListDoctorDelegate;
        
        private EndOperationDelegate onEndListDoctorDelegate;
        
        private System.Threading.SendOrPostCallback onListDoctorCompletedDelegate;
        
        private BeginOperationDelegate onBeginSaveDoctorDelegate;
        
        private EndOperationDelegate onEndSaveDoctorDelegate;
        
        private System.Threading.SendOrPostCallback onSaveDoctorCompletedDelegate;
        
        private BeginOperationDelegate onBeginListAspUserDelegate;
        
        private EndOperationDelegate onEndListAspUserDelegate;
        
        private System.Threading.SendOrPostCallback onListAspUserCompletedDelegate;
        
        private BeginOperationDelegate onBeginListUserNameDelegate;
        
        private EndOperationDelegate onEndListUserNameDelegate;
        
        private System.Threading.SendOrPostCallback onListUserNameCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateMembershipUserNameDelegate;
        
        private EndOperationDelegate onEndUpdateMembershipUserNameDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateMembershipUserNameCompletedDelegate;
        
        private BeginOperationDelegate onBeginListComponentDelegate;
        
        private EndOperationDelegate onEndListComponentDelegate;
        
        private System.Threading.SendOrPostCallback onListComponentCompletedDelegate;
        
        private BeginOperationDelegate onBeginListRoleComponentPermissionDelegate;
        
        private EndOperationDelegate onEndListRoleComponentPermissionDelegate;
        
        private System.Threading.SendOrPostCallback onListRoleComponentPermissionCompletedDelegate;
        
        private BeginOperationDelegate onBeginListRoleComponentPermissionByUserDelegate;
        
        private EndOperationDelegate onEndListRoleComponentPermissionByUserDelegate;
        
        private System.Threading.SendOrPostCallback onListRoleComponentPermissionByUserCompletedDelegate;
        
        private BeginOperationDelegate onBeginSaveRoleComponentPermissionDelegate;
        
        private EndOperationDelegate onEndSaveRoleComponentPermissionDelegate;
        
        private System.Threading.SendOrPostCallback onSaveRoleComponentPermissionCompletedDelegate;
        
        private BeginOperationDelegate onBeginListAspRoleDelegate;
        
        private EndOperationDelegate onEndListAspRoleDelegate;
        
        private System.Threading.SendOrPostCallback onListAspRoleCompletedDelegate;
        
        private BeginOperationDelegate onBeginSaveAspRoleDelegate;
        
        private EndOperationDelegate onEndSaveAspRoleDelegate;
        
        private System.Threading.SendOrPostCallback onSaveAspRoleCompletedDelegate;
        
        private BeginOperationDelegate onBeginListUserRoleAuthDelegate;
        
        private EndOperationDelegate onEndListUserRoleAuthDelegate;
        
        private System.Threading.SendOrPostCallback onListUserRoleAuthCompletedDelegate;
        
        private BeginOperationDelegate onBeginSaveUserRoleAuthDelegate;
        
        private EndOperationDelegate onEndSaveUserRoleAuthDelegate;
        
        private System.Threading.SendOrPostCallback onSaveUserRoleAuthCompletedDelegate;
        
        private BeginOperationDelegate onBeginListMedicineDelegate;
        
        private EndOperationDelegate onEndListMedicineDelegate;
        
        private System.Threading.SendOrPostCallback onListMedicineCompletedDelegate;
        
        private BeginOperationDelegate onBeginSaveMedicineDelegate;
        
        private EndOperationDelegate onEndSaveMedicineDelegate;
        
        private System.Threading.SendOrPostCallback onSaveMedicineCompletedDelegate;
        
        private BeginOperationDelegate onBeginListSiteMedicineStatusDelegate;
        
        private EndOperationDelegate onEndListSiteMedicineStatusDelegate;
        
        private System.Threading.SendOrPostCallback onListSiteMedicineStatusCompletedDelegate;
        
        private BeginOperationDelegate onBeginListMedicineInputDelegate;
        
        private EndOperationDelegate onEndListMedicineInputDelegate;
        
        private System.Threading.SendOrPostCallback onListMedicineInputCompletedDelegate;
        
        private BeginOperationDelegate onBeginSaveMedicineInputDelegate;
        
        private EndOperationDelegate onEndSaveMedicineInputDelegate;
        
        private System.Threading.SendOrPostCallback onSaveMedicineInputCompletedDelegate;
        
        private BeginOperationDelegate onBeginListServiceDelegate;
        
        private EndOperationDelegate onEndListServiceDelegate;
        
        private System.Threading.SendOrPostCallback onListServiceCompletedDelegate;
        
        private BeginOperationDelegate onBeginSaveServiceDelegate;
        
        private EndOperationDelegate onEndSaveServiceDelegate;
        
        private System.Threading.SendOrPostCallback onSaveServiceCompletedDelegate;
        
        private BeginOperationDelegate onBeginListImageDelegate;
        
        private EndOperationDelegate onEndListImageDelegate;
        
        private System.Threading.SendOrPostCallback onListImageCompletedDelegate;
        
        private BeginOperationDelegate onBeginSaveImageDelegate;
        
        private EndOperationDelegate onEndSaveImageDelegate;
        
        private System.Threading.SendOrPostCallback onSaveImageCompletedDelegate;
        
        private BeginOperationDelegate onBeginListTreatmentDelegate;
        
        private EndOperationDelegate onEndListTreatmentDelegate;
        
        private System.Threading.SendOrPostCallback onListTreatmentCompletedDelegate;
        
        private BeginOperationDelegate onBeginSaveTreatmentDelegate;
        
        private EndOperationDelegate onEndSaveTreatmentDelegate;
        
        private System.Threading.SendOrPostCallback onSaveTreatmentCompletedDelegate;
        
        private BeginOperationDelegate onBeginListTreatmentMedicineDelegate;
        
        private EndOperationDelegate onEndListTreatmentMedicineDelegate;
        
        private System.Threading.SendOrPostCallback onListTreatmentMedicineCompletedDelegate;
        
        private BeginOperationDelegate onBeginSaveTreatmentMedicineDelegate;
        
        private EndOperationDelegate onEndSaveTreatmentMedicineDelegate;
        
        private System.Threading.SendOrPostCallback onSaveTreatmentMedicineCompletedDelegate;
        
        private BeginOperationDelegate onBeginListTreatmentServiceDelegate;
        
        private EndOperationDelegate onEndListTreatmentServiceDelegate;
        
        private System.Threading.SendOrPostCallback onListTreatmentServiceCompletedDelegate;
        
        private BeginOperationDelegate onBeginSaveTreatmentServiceDelegate;
        
        private EndOperationDelegate onEndSaveTreatmentServiceDelegate;
        
        private System.Threading.SendOrPostCallback onSaveTreatmentServiceCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public ApartmentServiceClient() {
        }
        
        public ApartmentServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ApartmentServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ApartmentServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ApartmentServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<SelectSessionIdCompletedEventArgs> SelectSessionIdCompleted;
        
        public event System.EventHandler<GetUserLoginCompletedEventArgs> GetUserLoginCompleted;
        
        public event System.EventHandler<GetAppSettingsCompletedEventArgs> GetAppSettingsCompleted;
        
        public event System.EventHandler<GetGlobalVariableCompletedEventArgs> GetGlobalVariableCompleted;
        
        public event System.EventHandler<ChangePasswordCompletedEventArgs> ChangePasswordCompleted;
        
        public event System.EventHandler<GetAspUserCompletedEventArgs> GetAspUserCompleted;
        
        public event System.EventHandler<DeleteAspUserCompletedEventArgs> DeleteAspUserCompleted;
        
        public event System.EventHandler<UnlockAspUserCompletedEventArgs> UnlockAspUserCompleted;
        
        public event System.EventHandler<SaveAspUserCompletedEventArgs> SaveAspUserCompleted;
        
        public event System.EventHandler<ListCountryCompletedEventArgs> ListCountryCompleted;
        
        public event System.EventHandler<ListCityCompletedEventArgs> ListCityCompleted;
        
        public event System.EventHandler<ListDistrictCompletedEventArgs> ListDistrictCompleted;
        
        public event System.EventHandler<ListContactInformationCompletedEventArgs> ListContactInformationCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SaveContactInformationCompleted;
        
        public event System.EventHandler<ListOrganisationCompletedEventArgs> ListOrganisationCompleted;
        
        public event System.EventHandler<ListOrgAdminAspUserCompletedEventArgs> ListOrgAdminAspUserCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SaveOrganisationsCompleted;
        
        public event System.EventHandler<GetOrganisationCompletedEventArgs> GetOrganisationCompleted;
        
        public event System.EventHandler<GetOrganisationByCodeCompletedEventArgs> GetOrganisationByCodeCompleted;
        
        public event System.EventHandler<ListSiteCompletedEventArgs> ListSiteCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SaveSiteCompleted;
        
        public event System.EventHandler<ListCustomerCompletedEventArgs> ListCustomerCompleted;
        
        public event System.EventHandler<SaveCustomerCompletedEventArgs> SaveCustomerCompleted;
        
        public event System.EventHandler<ListDoctorCompletedEventArgs> ListDoctorCompleted;
        
        public event System.EventHandler<SaveDoctorCompletedEventArgs> SaveDoctorCompleted;
        
        public event System.EventHandler<ListAspUserCompletedEventArgs> ListAspUserCompleted;
        
        public event System.EventHandler<ListUserNameCompletedEventArgs> ListUserNameCompleted;
        
        public event System.EventHandler<UpdateMembershipUserNameCompletedEventArgs> UpdateMembershipUserNameCompleted;
        
        public event System.EventHandler<ListComponentCompletedEventArgs> ListComponentCompleted;
        
        public event System.EventHandler<ListRoleComponentPermissionCompletedEventArgs> ListRoleComponentPermissionCompleted;
        
        public event System.EventHandler<ListRoleComponentPermissionByUserCompletedEventArgs> ListRoleComponentPermissionByUserCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SaveRoleComponentPermissionCompleted;
        
        public event System.EventHandler<ListAspRoleCompletedEventArgs> ListAspRoleCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SaveAspRoleCompleted;
        
        public event System.EventHandler<ListUserRoleAuthCompletedEventArgs> ListUserRoleAuthCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SaveUserRoleAuthCompleted;
        
        public event System.EventHandler<ListMedicineCompletedEventArgs> ListMedicineCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SaveMedicineCompleted;
        
        public event System.EventHandler<ListSiteMedicineStatusCompletedEventArgs> ListSiteMedicineStatusCompleted;
        
        public event System.EventHandler<ListMedicineInputCompletedEventArgs> ListMedicineInputCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SaveMedicineInputCompleted;
        
        public event System.EventHandler<ListServiceCompletedEventArgs> ListServiceCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SaveServiceCompleted;
        
        public event System.EventHandler<ListImageCompletedEventArgs> ListImageCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SaveImageCompleted;
        
        public event System.EventHandler<ListTreatmentCompletedEventArgs> ListTreatmentCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SaveTreatmentCompleted;
        
        public event System.EventHandler<ListTreatmentMedicineCompletedEventArgs> ListTreatmentMedicineCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SaveTreatmentMedicineCompleted;
        
        public event System.EventHandler<ListTreatmentServiceCompletedEventArgs> ListTreatmentServiceCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SaveTreatmentServiceCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService.BeginSelectSessionId(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSelectSessionId(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService.EndSelectSessionId(System.IAsyncResult result) {
            return base.Channel.EndSelectSessionId(result);
        }
        
        private System.IAsyncResult OnBeginSelectSessionId(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService)(this)).BeginSelectSessionId(callback, asyncState);
        }
        
        private object[] OnEndSelectSessionId(System.IAsyncResult result) {
            string retVal = ((Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService)(this)).EndSelectSessionId(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSelectSessionIdCompleted(object state) {
            if ((this.SelectSessionIdCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SelectSessionIdCompleted(this, new SelectSessionIdCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SelectSessionIdAsync() {
            this.SelectSessionIdAsync(null);
        }
        
        public void SelectSessionIdAsync(object userState) {
            if ((this.onBeginSelectSessionIdDelegate == null)) {
                this.onBeginSelectSessionIdDelegate = new BeginOperationDelegate(this.OnBeginSelectSessionId);
            }
            if ((this.onEndSelectSessionIdDelegate == null)) {
                this.onEndSelectSessionIdDelegate = new EndOperationDelegate(this.OnEndSelectSessionId);
            }
            if ((this.onSelectSessionIdCompletedDelegate == null)) {
                this.onSelectSessionIdCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSelectSessionIdCompleted);
            }
            base.InvokeAsync(this.onBeginSelectSessionIdDelegate, null, this.onEndSelectSessionIdDelegate, this.onSelectSessionIdCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService.BeginGetUserLogin(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetUserLogin(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Medical.Apartment.Silverlight.UI.ApartmentService.UserLogin Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService.EndGetUserLogin(System.IAsyncResult result) {
            return base.Channel.EndGetUserLogin(result);
        }
        
        private System.IAsyncResult OnBeginGetUserLogin(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService)(this)).BeginGetUserLogin(callback, asyncState);
        }
        
        private object[] OnEndGetUserLogin(System.IAsyncResult result) {
            Medical.Apartment.Silverlight.UI.ApartmentService.UserLogin retVal = ((Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService)(this)).EndGetUserLogin(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetUserLoginCompleted(object state) {
            if ((this.GetUserLoginCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetUserLoginCompleted(this, new GetUserLoginCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetUserLoginAsync() {
            this.GetUserLoginAsync(null);
        }
        
        public void GetUserLoginAsync(object userState) {
            if ((this.onBeginGetUserLoginDelegate == null)) {
                this.onBeginGetUserLoginDelegate = new BeginOperationDelegate(this.OnBeginGetUserLogin);
            }
            if ((this.onEndGetUserLoginDelegate == null)) {
                this.onEndGetUserLoginDelegate = new EndOperationDelegate(this.OnEndGetUserLogin);
            }
            if ((this.onGetUserLoginCompletedDelegate == null)) {
                this.onGetUserLoginCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetUserLoginCompleted);
            }
            base.InvokeAsync(this.onBeginGetUserLoginDelegate, null, this.onEndGetUserLoginDelegate, this.onGetUserLoginCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService.BeginGetAppSettings(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAppSettings(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Medical.Apartment.Silverlight.UI.ApartmentService.AppSettings Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService.EndGetAppSettings(System.IAsyncResult result) {
            return base.Channel.EndGetAppSettings(result);
        }
        
        private System.IAsyncResult OnBeginGetAppSettings(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService)(this)).BeginGetAppSettings(callback, asyncState);
        }
        
        private object[] OnEndGetAppSettings(System.IAsyncResult result) {
            Medical.Apartment.Silverlight.UI.ApartmentService.AppSettings retVal = ((Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService)(this)).EndGetAppSettings(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAppSettingsCompleted(object state) {
            if ((this.GetAppSettingsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAppSettingsCompleted(this, new GetAppSettingsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAppSettingsAsync() {
            this.GetAppSettingsAsync(null);
        }
        
        public void GetAppSettingsAsync(object userState) {
            if ((this.onBeginGetAppSettingsDelegate == null)) {
                this.onBeginGetAppSettingsDelegate = new BeginOperationDelegate(this.OnBeginGetAppSettings);
            }
            if ((this.onEndGetAppSettingsDelegate == null)) {
                this.onEndGetAppSettingsDelegate = new EndOperationDelegate(this.OnEndGetAppSettings);
            }
            if ((this.onGetAppSettingsCompletedDelegate == null)) {
                this.onGetAppSettingsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAppSettingsCompleted);
            }
            base.InvokeAsync(this.onBeginGetAppSettingsDelegate, null, this.onEndGetAppSettingsDelegate, this.onGetAppSettingsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService.BeginGetGlobalVariable(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetGlobalVariable(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Medical.Apartment.Silverlight.UI.ApartmentService.GlobalVariable Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService.EndGetGlobalVariable(System.IAsyncResult result) {
            return base.Channel.EndGetGlobalVariable(result);
        }
        
        private System.IAsyncResult OnBeginGetGlobalVariable(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService)(this)).BeginGetGlobalVariable(callback, asyncState);
        }
        
        private object[] OnEndGetGlobalVariable(System.IAsyncResult result) {
            Medical.Apartment.Silverlight.UI.ApartmentService.GlobalVariable retVal = ((Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService)(this)).EndGetGlobalVariable(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetGlobalVariableCompleted(object state) {
            if ((this.GetGlobalVariableCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetGlobalVariableCompleted(this, new GetGlobalVariableCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetGlobalVariableAsync() {
            this.GetGlobalVariableAsync(null);
        }
        
        public void GetGlobalVariableAsync(object userState) {
            if ((this.onBeginGetGlobalVariableDelegate == null)) {
                this.onBeginGetGlobalVariableDelegate = new BeginOperationDelegate(this.OnBeginGetGlobalVariable);
            }
            if ((this.onEndGetGlobalVariableDelegate == null)) {
                this.onEndGetGlobalVariableDelegate = new EndOperationDelegate(this.OnEndGetGlobalVariable);
            }
            if ((this.onGetGlobalVariableCompletedDelegate == null)) {
                this.onGetGlobalVariableCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetGlobalVariableCompleted);
            }
            base.InvokeAsync(this.onBeginGetGlobalVariableDelegate, null, this.onEndGetGlobalVariableDelegate, this.onGetGlobalVariableCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService.BeginChangePassword(string oldPassword, string newPassword, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginChangePassword(oldPassword, newPassword, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService.EndChangePassword(System.IAsyncResult result) {
            return base.Channel.EndChangePassword(result);
        }
        
        private System.IAsyncResult OnBeginChangePassword(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string oldPassword = ((string)(inValues[0]));
            string newPassword = ((string)(inValues[1]));
            return ((Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService)(this)).BeginChangePassword(oldPassword, newPassword, callback, asyncState);
        }
        
        private object[] OnEndChangePassword(System.IAsyncResult result) {
            int retVal = ((Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService)(this)).EndChangePassword(result);
            return new object[] {
                    retVal};
        }
        
        private void OnChangePasswordCompleted(object state) {
            if ((this.ChangePasswordCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ChangePasswordCompleted(this, new ChangePasswordCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ChangePasswordAsync(string oldPassword, string newPassword) {
            this.ChangePasswordAsync(oldPassword, newPassword, null);
        }
        
        public void ChangePasswordAsync(string oldPassword, string newPassword, object userState) {
            if ((this.onBeginChangePasswordDelegate == null)) {
                this.onBeginChangePasswordDelegate = new BeginOperationDelegate(this.OnBeginChangePassword);
            }
            if ((this.onEndChangePasswordDelegate == null)) {
                this.onEndChangePasswordDelegate = new EndOperationDelegate(this.OnEndChangePassword);
            }
            if ((this.onChangePasswordCompletedDelegate == null)) {
                this.onChangePasswordCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnChangePasswordCompleted);
            }
            base.InvokeAsync(this.onBeginChangePasswordDelegate, new object[] {
                        oldPassword,
                        newPassword}, this.onEndChangePasswordDelegate, this.onChangePasswordCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService.BeginGetAspUser(System.Guid userId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAspUser(userId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Medical.Apartment.Common.AspUser Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService.EndGetAspUser(System.IAsyncResult result) {
            return base.Channel.EndGetAspUser(result);
        }
        
        private System.IAsyncResult OnBeginGetAspUser(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid userId = ((System.Guid)(inValues[0]));
            return ((Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService)(this)).BeginGetAspUser(userId, callback, asyncState);
        }
        
        private object[] OnEndGetAspUser(System.IAsyncResult result) {
            Medical.Apartment.Common.AspUser retVal = ((Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService)(this)).EndGetAspUser(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAspUserCompleted(object state) {
            if ((this.GetAspUserCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAspUserCompleted(this, new GetAspUserCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAspUserAsync(System.Guid userId) {
            this.GetAspUserAsync(userId, null);
        }
        
        public void GetAspUserAsync(System.Guid userId, object userState) {
            if ((this.onBeginGetAspUserDelegate == null)) {
                this.onBeginGetAspUserDelegate = new BeginOperationDelegate(this.OnBeginGetAspUser);
            }
            if ((this.onEndGetAspUserDelegate == null)) {
                this.onEndGetAspUserDelegate = new EndOperationDelegate(this.OnEndGetAspUser);
            }
            if ((this.onGetAspUserCompletedDelegate == null)) {
                this.onGetAspUserCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAspUserCompleted);
            }
            base.InvokeAsync(this.onBeginGetAspUserDelegate, new object[] {
                        userId}, this.onEndGetAspUserDelegate, this.onGetAspUserCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService.BeginDeleteAspUser(Medical.Apartment.Common.AspUser aspUser, System.Nullable<long> employeeId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteAspUser(aspUser, employeeId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService.EndDeleteAspUser(System.IAsyncResult result) {
            return base.Channel.EndDeleteAspUser(result);
        }
        
        private System.IAsyncResult OnBeginDeleteAspUser(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Medical.Apartment.Common.AspUser aspUser = ((Medical.Apartment.Common.AspUser)(inValues[0]));
            System.Nullable<long> employeeId = ((System.Nullable<long>)(inValues[1]));
            return ((Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService)(this)).BeginDeleteAspUser(aspUser, employeeId, callback, asyncState);
        }
        
        private object[] OnEndDeleteAspUser(System.IAsyncResult result) {
            bool retVal = ((Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService)(this)).EndDeleteAspUser(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeleteAspUserCompleted(object state) {
            if ((this.DeleteAspUserCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteAspUserCompleted(this, new DeleteAspUserCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteAspUserAsync(Medical.Apartment.Common.AspUser aspUser, System.Nullable<long> employeeId) {
            this.DeleteAspUserAsync(aspUser, employeeId, null);
        }
        
        public void DeleteAspUserAsync(Medical.Apartment.Common.AspUser aspUser, System.Nullable<long> employeeId, object userState) {
            if ((this.onBeginDeleteAspUserDelegate == null)) {
                this.onBeginDeleteAspUserDelegate = new BeginOperationDelegate(this.OnBeginDeleteAspUser);
            }
            if ((this.onEndDeleteAspUserDelegate == null)) {
                this.onEndDeleteAspUserDelegate = new EndOperationDelegate(this.OnEndDeleteAspUser);
            }
            if ((this.onDeleteAspUserCompletedDelegate == null)) {
                this.onDeleteAspUserCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteAspUserCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteAspUserDelegate, new object[] {
                        aspUser,
                        employeeId}, this.onEndDeleteAspUserDelegate, this.onDeleteAspUserCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService.BeginUnlockAspUser(Medical.Apartment.Common.AspUser oldUser, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUnlockAspUser(oldUser, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Medical.Apartment.Common.AspUser Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService.EndUnlockAspUser(System.IAsyncResult result) {
            return base.Channel.EndUnlockAspUser(result);
        }
        
        private System.IAsyncResult OnBeginUnlockAspUser(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Medical.Apartment.Common.AspUser oldUser = ((Medical.Apartment.Common.AspUser)(inValues[0]));
            return ((Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService)(this)).BeginUnlockAspUser(oldUser, callback, asyncState);
        }
        
        private object[] OnEndUnlockAspUser(System.IAsyncResult result) {
            Medical.Apartment.Common.AspUser retVal = ((Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService)(this)).EndUnlockAspUser(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUnlockAspUserCompleted(object state) {
            if ((this.UnlockAspUserCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UnlockAspUserCompleted(this, new UnlockAspUserCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UnlockAspUserAsync(Medical.Apartment.Common.AspUser oldUser) {
            this.UnlockAspUserAsync(oldUser, null);
        }
        
        public void UnlockAspUserAsync(Medical.Apartment.Common.AspUser oldUser, object userState) {
            if ((this.onBeginUnlockAspUserDelegate == null)) {
                this.onBeginUnlockAspUserDelegate = new BeginOperationDelegate(this.OnBeginUnlockAspUser);
            }
            if ((this.onEndUnlockAspUserDelegate == null)) {
                this.onEndUnlockAspUserDelegate = new EndOperationDelegate(this.OnEndUnlockAspUser);
            }
            if ((this.onUnlockAspUserCompletedDelegate == null)) {
                this.onUnlockAspUserCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUnlockAspUserCompleted);
            }
            base.InvokeAsync(this.onBeginUnlockAspUserDelegate, new object[] {
                        oldUser}, this.onEndUnlockAspUserDelegate, this.onUnlockAspUserCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService.BeginSaveAspUser(Medical.Apartment.Common.AspUser saveUser, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSaveAspUser(saveUser, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Medical.Apartment.Common.AspUser Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService.EndSaveAspUser(System.IAsyncResult result) {
            return base.Channel.EndSaveAspUser(result);
        }
        
        private System.IAsyncResult OnBeginSaveAspUser(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Medical.Apartment.Common.AspUser saveUser = ((Medical.Apartment.Common.AspUser)(inValues[0]));
            return ((Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService)(this)).BeginSaveAspUser(saveUser, callback, asyncState);
        }
        
        private object[] OnEndSaveAspUser(System.IAsyncResult result) {
            Medical.Apartment.Common.AspUser retVal = ((Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService)(this)).EndSaveAspUser(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSaveAspUserCompleted(object state) {
            if ((this.SaveAspUserCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaveAspUserCompleted(this, new SaveAspUserCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SaveAspUserAsync(Medical.Apartment.Common.AspUser saveUser) {
            this.SaveAspUserAsync(saveUser, null);
        }
        
        public void SaveAspUserAsync(Medical.Apartment.Common.AspUser saveUser, object userState) {
            if ((this.onBeginSaveAspUserDelegate == null)) {
                this.onBeginSaveAspUserDelegate = new BeginOperationDelegate(this.OnBeginSaveAspUser);
            }
            if ((this.onEndSaveAspUserDelegate == null)) {
                this.onEndSaveAspUserDelegate = new EndOperationDelegate(this.OnEndSaveAspUser);
            }
            if ((this.onSaveAspUserCompletedDelegate == null)) {
                this.onSaveAspUserCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveAspUserCompleted);
            }
            base.InvokeAsync(this.onBeginSaveAspUserDelegate, new object[] {
                        saveUser}, this.onEndSaveAspUserDelegate, this.onSaveAspUserCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService.BeginListCountry(System.Nullable<int> countryId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginListCountry(countryId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<Medical.Apartment.Common.Country> Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService.EndListCountry(System.IAsyncResult result) {
            return base.Channel.EndListCountry(result);
        }
        
        private System.IAsyncResult OnBeginListCountry(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Nullable<int> countryId = ((System.Nullable<int>)(inValues[0]));
            return ((Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService)(this)).BeginListCountry(countryId, callback, asyncState);
        }
        
        private object[] OnEndListCountry(System.IAsyncResult result) {
            System.Collections.Generic.List<Medical.Apartment.Common.Country> retVal = ((Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService)(this)).EndListCountry(result);
            return new object[] {
                    retVal};
        }
        
        private void OnListCountryCompleted(object state) {
            if ((this.ListCountryCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ListCountryCompleted(this, new ListCountryCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ListCountryAsync(System.Nullable<int> countryId) {
            this.ListCountryAsync(countryId, null);
        }
        
        public void ListCountryAsync(System.Nullable<int> countryId, object userState) {
            if ((this.onBeginListCountryDelegate == null)) {
                this.onBeginListCountryDelegate = new BeginOperationDelegate(this.OnBeginListCountry);
            }
            if ((this.onEndListCountryDelegate == null)) {
                this.onEndListCountryDelegate = new EndOperationDelegate(this.OnEndListCountry);
            }
            if ((this.onListCountryCompletedDelegate == null)) {
                this.onListCountryCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnListCountryCompleted);
            }
            base.InvokeAsync(this.onBeginListCountryDelegate, new object[] {
                        countryId}, this.onEndListCountryDelegate, this.onListCountryCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService.BeginListCity(System.Nullable<int> countryid, System.Nullable<int> cityId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginListCity(countryid, cityId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<Medical.Apartment.Common.City> Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService.EndListCity(System.IAsyncResult result) {
            return base.Channel.EndListCity(result);
        }
        
        private System.IAsyncResult OnBeginListCity(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Nullable<int> countryid = ((System.Nullable<int>)(inValues[0]));
            System.Nullable<int> cityId = ((System.Nullable<int>)(inValues[1]));
            return ((Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService)(this)).BeginListCity(countryid, cityId, callback, asyncState);
        }
        
        private object[] OnEndListCity(System.IAsyncResult result) {
            System.Collections.Generic.List<Medical.Apartment.Common.City> retVal = ((Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService)(this)).EndListCity(result);
            return new object[] {
                    retVal};
        }
        
        private void OnListCityCompleted(object state) {
            if ((this.ListCityCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ListCityCompleted(this, new ListCityCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ListCityAsync(System.Nullable<int> countryid, System.Nullable<int> cityId) {
            this.ListCityAsync(countryid, cityId, null);
        }
        
        public void ListCityAsync(System.Nullable<int> countryid, System.Nullable<int> cityId, object userState) {
            if ((this.onBeginListCityDelegate == null)) {
                this.onBeginListCityDelegate = new BeginOperationDelegate(this.OnBeginListCity);
            }
            if ((this.onEndListCityDelegate == null)) {
                this.onEndListCityDelegate = new EndOperationDelegate(this.OnEndListCity);
            }
            if ((this.onListCityCompletedDelegate == null)) {
                this.onListCityCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnListCityCompleted);
            }
            base.InvokeAsync(this.onBeginListCityDelegate, new object[] {
                        countryid,
                        cityId}, this.onEndListCityDelegate, this.onListCityCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService.BeginListDistrict(System.Nullable<int> cityId, System.Nullable<int> districtId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginListDistrict(cityId, districtId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<Medical.Apartment.Common.District> Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService.EndListDistrict(System.IAsyncResult result) {
            return base.Channel.EndListDistrict(result);
        }
        
        private System.IAsyncResult OnBeginListDistrict(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Nullable<int> cityId = ((System.Nullable<int>)(inValues[0]));
            System.Nullable<int> districtId = ((System.Nullable<int>)(inValues[1]));
            return ((Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService)(this)).BeginListDistrict(cityId, districtId, callback, asyncState);
        }
        
        private object[] OnEndListDistrict(System.IAsyncResult result) {
            System.Collections.Generic.List<Medical.Apartment.Common.District> retVal = ((Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService)(this)).EndListDistrict(result);
            return new object[] {
                    retVal};
        }
        
        private void OnListDistrictCompleted(object state) {
            if ((this.ListDistrictCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ListDistrictCompleted(this, new ListDistrictCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ListDistrictAsync(System.Nullable<int> cityId, System.Nullable<int> districtId) {
            this.ListDistrictAsync(cityId, districtId, null);
        }
        
        public void ListDistrictAsync(System.Nullable<int> cityId, System.Nullable<int> districtId, object userState) {
            if ((this.onBeginListDistrictDelegate == null)) {
                this.onBeginListDistrictDelegate = new BeginOperationDelegate(this.OnBeginListDistrict);
            }
            if ((this.onEndListDistrictDelegate == null)) {
                this.onEndListDistrictDelegate = new EndOperationDelegate(this.OnEndListDistrict);
            }
            if ((this.onListDistrictCompletedDelegate == null)) {
                this.onListDistrictCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnListDistrictCompleted);
            }
            base.InvokeAsync(this.onBeginListDistrictDelegate, new object[] {
                        cityId,
                        districtId}, this.onEndListDistrictDelegate, this.onListDistrictCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService.BeginListContactInformation(System.Nullable<int> contactInfoId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginListContactInformation(contactInfoId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<Medical.Apartment.Common.ContactInformation> Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService.EndListContactInformation(System.IAsyncResult result) {
            return base.Channel.EndListContactInformation(result);
        }
        
        private System.IAsyncResult OnBeginListContactInformation(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Nullable<int> contactInfoId = ((System.Nullable<int>)(inValues[0]));
            return ((Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService)(this)).BeginListContactInformation(contactInfoId, callback, asyncState);
        }
        
        private object[] OnEndListContactInformation(System.IAsyncResult result) {
            System.Collections.Generic.List<Medical.Apartment.Common.ContactInformation> retVal = ((Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService)(this)).EndListContactInformation(result);
            return new object[] {
                    retVal};
        }
        
        private void OnListContactInformationCompleted(object state) {
            if ((this.ListContactInformationCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ListContactInformationCompleted(this, new ListContactInformationCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ListContactInformationAsync(System.Nullable<int> contactInfoId) {
            this.ListContactInformationAsync(contactInfoId, null);
        }
        
        public void ListContactInformationAsync(System.Nullable<int> contactInfoId, object userState) {
            if ((this.onBeginListContactInformationDelegate == null)) {
                this.onBeginListContactInformationDelegate = new BeginOperationDelegate(this.OnBeginListContactInformation);
            }
            if ((this.onEndListContactInformationDelegate == null)) {
                this.onEndListContactInformationDelegate = new EndOperationDelegate(this.OnEndListContactInformation);
            }
            if ((this.onListContactInformationCompletedDelegate == null)) {
                this.onListContactInformationCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnListContactInformationCompleted);
            }
            base.InvokeAsync(this.onBeginListContactInformationDelegate, new object[] {
                        contactInfoId}, this.onEndListContactInformationDelegate, this.onListContactInformationCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService.BeginSaveContactInformation(System.Collections.Generic.List<Medical.Apartment.Common.ContactInformation> saveList, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSaveContactInformation(saveList, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService.EndSaveContactInformation(System.IAsyncResult result) {
            base.Channel.EndSaveContactInformation(result);
        }
        
        private System.IAsyncResult OnBeginSaveContactInformation(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.Generic.List<Medical.Apartment.Common.ContactInformation> saveList = ((System.Collections.Generic.List<Medical.Apartment.Common.ContactInformation>)(inValues[0]));
            return ((Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService)(this)).BeginSaveContactInformation(saveList, callback, asyncState);
        }
        
        private object[] OnEndSaveContactInformation(System.IAsyncResult result) {
            ((Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService)(this)).EndSaveContactInformation(result);
            return null;
        }
        
        private void OnSaveContactInformationCompleted(object state) {
            if ((this.SaveContactInformationCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaveContactInformationCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SaveContactInformationAsync(System.Collections.Generic.List<Medical.Apartment.Common.ContactInformation> saveList) {
            this.SaveContactInformationAsync(saveList, null);
        }
        
        public void SaveContactInformationAsync(System.Collections.Generic.List<Medical.Apartment.Common.ContactInformation> saveList, object userState) {
            if ((this.onBeginSaveContactInformationDelegate == null)) {
                this.onBeginSaveContactInformationDelegate = new BeginOperationDelegate(this.OnBeginSaveContactInformation);
            }
            if ((this.onEndSaveContactInformationDelegate == null)) {
                this.onEndSaveContactInformationDelegate = new EndOperationDelegate(this.OnEndSaveContactInformation);
            }
            if ((this.onSaveContactInformationCompletedDelegate == null)) {
                this.onSaveContactInformationCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveContactInformationCompleted);
            }
            base.InvokeAsync(this.onBeginSaveContactInformationDelegate, new object[] {
                        saveList}, this.onEndSaveContactInformationDelegate, this.onSaveContactInformationCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService.BeginListOrganisation(System.Nullable<System.Guid> roleId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginListOrganisation(roleId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<Medical.Apartment.Common.Organisation> Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService.EndListOrganisation(System.IAsyncResult result) {
            return base.Channel.EndListOrganisation(result);
        }
        
        private System.IAsyncResult OnBeginListOrganisation(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Nullable<System.Guid> roleId = ((System.Nullable<System.Guid>)(inValues[0]));
            return ((Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService)(this)).BeginListOrganisation(roleId, callback, asyncState);
        }
        
        private object[] OnEndListOrganisation(System.IAsyncResult result) {
            System.Collections.Generic.List<Medical.Apartment.Common.Organisation> retVal = ((Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService)(this)).EndListOrganisation(result);
            return new object[] {
                    retVal};
        }
        
        private void OnListOrganisationCompleted(object state) {
            if ((this.ListOrganisationCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ListOrganisationCompleted(this, new ListOrganisationCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ListOrganisationAsync(System.Nullable<System.Guid> roleId) {
            this.ListOrganisationAsync(roleId, null);
        }
        
        public void ListOrganisationAsync(System.Nullable<System.Guid> roleId, object userState) {
            if ((this.onBeginListOrganisationDelegate == null)) {
                this.onBeginListOrganisationDelegate = new BeginOperationDelegate(this.OnBeginListOrganisation);
            }
            if ((this.onEndListOrganisationDelegate == null)) {
                this.onEndListOrganisationDelegate = new EndOperationDelegate(this.OnEndListOrganisation);
            }
            if ((this.onListOrganisationCompletedDelegate == null)) {
                this.onListOrganisationCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnListOrganisationCompleted);
            }
            base.InvokeAsync(this.onBeginListOrganisationDelegate, new object[] {
                        roleId}, this.onEndListOrganisationDelegate, this.onListOrganisationCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService.BeginListOrgAdminAspUser(int orgId, System.Guid roleId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginListOrgAdminAspUser(orgId, roleId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<Medical.Apartment.Common.AspUser> Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService.EndListOrgAdminAspUser(System.IAsyncResult result) {
            return base.Channel.EndListOrgAdminAspUser(result);
        }
        
        private System.IAsyncResult OnBeginListOrgAdminAspUser(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int orgId = ((int)(inValues[0]));
            System.Guid roleId = ((System.Guid)(inValues[1]));
            return ((Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService)(this)).BeginListOrgAdminAspUser(orgId, roleId, callback, asyncState);
        }
        
        private object[] OnEndListOrgAdminAspUser(System.IAsyncResult result) {
            System.Collections.Generic.List<Medical.Apartment.Common.AspUser> retVal = ((Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService)(this)).EndListOrgAdminAspUser(result);
            return new object[] {
                    retVal};
        }
        
        private void OnListOrgAdminAspUserCompleted(object state) {
            if ((this.ListOrgAdminAspUserCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ListOrgAdminAspUserCompleted(this, new ListOrgAdminAspUserCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ListOrgAdminAspUserAsync(int orgId, System.Guid roleId) {
            this.ListOrgAdminAspUserAsync(orgId, roleId, null);
        }
        
        public void ListOrgAdminAspUserAsync(int orgId, System.Guid roleId, object userState) {
            if ((this.onBeginListOrgAdminAspUserDelegate == null)) {
                this.onBeginListOrgAdminAspUserDelegate = new BeginOperationDelegate(this.OnBeginListOrgAdminAspUser);
            }
            if ((this.onEndListOrgAdminAspUserDelegate == null)) {
                this.onEndListOrgAdminAspUserDelegate = new EndOperationDelegate(this.OnEndListOrgAdminAspUser);
            }
            if ((this.onListOrgAdminAspUserCompletedDelegate == null)) {
                this.onListOrgAdminAspUserCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnListOrgAdminAspUserCompleted);
            }
            base.InvokeAsync(this.onBeginListOrgAdminAspUserDelegate, new object[] {
                        orgId,
                        roleId}, this.onEndListOrgAdminAspUserDelegate, this.onListOrgAdminAspUserCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService.BeginSaveOrganisations(System.Collections.Generic.List<Medical.Apartment.Common.Organisation> saveList, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSaveOrganisations(saveList, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService.EndSaveOrganisations(System.IAsyncResult result) {
            base.Channel.EndSaveOrganisations(result);
        }
        
        private System.IAsyncResult OnBeginSaveOrganisations(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.Generic.List<Medical.Apartment.Common.Organisation> saveList = ((System.Collections.Generic.List<Medical.Apartment.Common.Organisation>)(inValues[0]));
            return ((Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService)(this)).BeginSaveOrganisations(saveList, callback, asyncState);
        }
        
        private object[] OnEndSaveOrganisations(System.IAsyncResult result) {
            ((Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService)(this)).EndSaveOrganisations(result);
            return null;
        }
        
        private void OnSaveOrganisationsCompleted(object state) {
            if ((this.SaveOrganisationsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaveOrganisationsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SaveOrganisationsAsync(System.Collections.Generic.List<Medical.Apartment.Common.Organisation> saveList) {
            this.SaveOrganisationsAsync(saveList, null);
        }
        
        public void SaveOrganisationsAsync(System.Collections.Generic.List<Medical.Apartment.Common.Organisation> saveList, object userState) {
            if ((this.onBeginSaveOrganisationsDelegate == null)) {
                this.onBeginSaveOrganisationsDelegate = new BeginOperationDelegate(this.OnBeginSaveOrganisations);
            }
            if ((this.onEndSaveOrganisationsDelegate == null)) {
                this.onEndSaveOrganisationsDelegate = new EndOperationDelegate(this.OnEndSaveOrganisations);
            }
            if ((this.onSaveOrganisationsCompletedDelegate == null)) {
                this.onSaveOrganisationsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveOrganisationsCompleted);
            }
            base.InvokeAsync(this.onBeginSaveOrganisationsDelegate, new object[] {
                        saveList}, this.onEndSaveOrganisationsDelegate, this.onSaveOrganisationsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService.BeginGetOrganisation(int organisationId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetOrganisation(organisationId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Medical.Apartment.Common.Organisation Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService.EndGetOrganisation(System.IAsyncResult result) {
            return base.Channel.EndGetOrganisation(result);
        }
        
        private System.IAsyncResult OnBeginGetOrganisation(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int organisationId = ((int)(inValues[0]));
            return ((Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService)(this)).BeginGetOrganisation(organisationId, callback, asyncState);
        }
        
        private object[] OnEndGetOrganisation(System.IAsyncResult result) {
            Medical.Apartment.Common.Organisation retVal = ((Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService)(this)).EndGetOrganisation(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetOrganisationCompleted(object state) {
            if ((this.GetOrganisationCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetOrganisationCompleted(this, new GetOrganisationCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetOrganisationAsync(int organisationId) {
            this.GetOrganisationAsync(organisationId, null);
        }
        
        public void GetOrganisationAsync(int organisationId, object userState) {
            if ((this.onBeginGetOrganisationDelegate == null)) {
                this.onBeginGetOrganisationDelegate = new BeginOperationDelegate(this.OnBeginGetOrganisation);
            }
            if ((this.onEndGetOrganisationDelegate == null)) {
                this.onEndGetOrganisationDelegate = new EndOperationDelegate(this.OnEndGetOrganisation);
            }
            if ((this.onGetOrganisationCompletedDelegate == null)) {
                this.onGetOrganisationCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetOrganisationCompleted);
            }
            base.InvokeAsync(this.onBeginGetOrganisationDelegate, new object[] {
                        organisationId}, this.onEndGetOrganisationDelegate, this.onGetOrganisationCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService.BeginGetOrganisationByCode(string authorisationCode, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetOrganisationByCode(authorisationCode, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Medical.Apartment.Common.Organisation Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService.EndGetOrganisationByCode(System.IAsyncResult result) {
            return base.Channel.EndGetOrganisationByCode(result);
        }
        
        private System.IAsyncResult OnBeginGetOrganisationByCode(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string authorisationCode = ((string)(inValues[0]));
            return ((Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService)(this)).BeginGetOrganisationByCode(authorisationCode, callback, asyncState);
        }
        
        private object[] OnEndGetOrganisationByCode(System.IAsyncResult result) {
            Medical.Apartment.Common.Organisation retVal = ((Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService)(this)).EndGetOrganisationByCode(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetOrganisationByCodeCompleted(object state) {
            if ((this.GetOrganisationByCodeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetOrganisationByCodeCompleted(this, new GetOrganisationByCodeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetOrganisationByCodeAsync(string authorisationCode) {
            this.GetOrganisationByCodeAsync(authorisationCode, null);
        }
        
        public void GetOrganisationByCodeAsync(string authorisationCode, object userState) {
            if ((this.onBeginGetOrganisationByCodeDelegate == null)) {
                this.onBeginGetOrganisationByCodeDelegate = new BeginOperationDelegate(this.OnBeginGetOrganisationByCode);
            }
            if ((this.onEndGetOrganisationByCodeDelegate == null)) {
                this.onEndGetOrganisationByCodeDelegate = new EndOperationDelegate(this.OnEndGetOrganisationByCode);
            }
            if ((this.onGetOrganisationByCodeCompletedDelegate == null)) {
                this.onGetOrganisationByCodeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetOrganisationByCodeCompleted);
            }
            base.InvokeAsync(this.onBeginGetOrganisationByCodeDelegate, new object[] {
                        authorisationCode}, this.onEndGetOrganisationByCodeDelegate, this.onGetOrganisationByCodeCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService.BeginListSite(System.Nullable<int> orgId, System.Nullable<int> siteId, bool showLegacy, bool loadContact, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginListSite(orgId, siteId, showLegacy, loadContact, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<Medical.Apartment.Common.Site> Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService.EndListSite(System.IAsyncResult result) {
            return base.Channel.EndListSite(result);
        }
        
        private System.IAsyncResult OnBeginListSite(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Nullable<int> orgId = ((System.Nullable<int>)(inValues[0]));
            System.Nullable<int> siteId = ((System.Nullable<int>)(inValues[1]));
            bool showLegacy = ((bool)(inValues[2]));
            bool loadContact = ((bool)(inValues[3]));
            return ((Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService)(this)).BeginListSite(orgId, siteId, showLegacy, loadContact, callback, asyncState);
        }
        
        private object[] OnEndListSite(System.IAsyncResult result) {
            System.Collections.Generic.List<Medical.Apartment.Common.Site> retVal = ((Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService)(this)).EndListSite(result);
            return new object[] {
                    retVal};
        }
        
        private void OnListSiteCompleted(object state) {
            if ((this.ListSiteCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ListSiteCompleted(this, new ListSiteCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ListSiteAsync(System.Nullable<int> orgId, System.Nullable<int> siteId, bool showLegacy, bool loadContact) {
            this.ListSiteAsync(orgId, siteId, showLegacy, loadContact, null);
        }
        
        public void ListSiteAsync(System.Nullable<int> orgId, System.Nullable<int> siteId, bool showLegacy, bool loadContact, object userState) {
            if ((this.onBeginListSiteDelegate == null)) {
                this.onBeginListSiteDelegate = new BeginOperationDelegate(this.OnBeginListSite);
            }
            if ((this.onEndListSiteDelegate == null)) {
                this.onEndListSiteDelegate = new EndOperationDelegate(this.OnEndListSite);
            }
            if ((this.onListSiteCompletedDelegate == null)) {
                this.onListSiteCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnListSiteCompleted);
            }
            base.InvokeAsync(this.onBeginListSiteDelegate, new object[] {
                        orgId,
                        siteId,
                        showLegacy,
                        loadContact}, this.onEndListSiteDelegate, this.onListSiteCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService.BeginSaveSite(System.Collections.Generic.List<Medical.Apartment.Common.Site> saveList, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSaveSite(saveList, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService.EndSaveSite(System.IAsyncResult result) {
            base.Channel.EndSaveSite(result);
        }
        
        private System.IAsyncResult OnBeginSaveSite(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.Generic.List<Medical.Apartment.Common.Site> saveList = ((System.Collections.Generic.List<Medical.Apartment.Common.Site>)(inValues[0]));
            return ((Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService)(this)).BeginSaveSite(saveList, callback, asyncState);
        }
        
        private object[] OnEndSaveSite(System.IAsyncResult result) {
            ((Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService)(this)).EndSaveSite(result);
            return null;
        }
        
        private void OnSaveSiteCompleted(object state) {
            if ((this.SaveSiteCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaveSiteCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SaveSiteAsync(System.Collections.Generic.List<Medical.Apartment.Common.Site> saveList) {
            this.SaveSiteAsync(saveList, null);
        }
        
        public void SaveSiteAsync(System.Collections.Generic.List<Medical.Apartment.Common.Site> saveList, object userState) {
            if ((this.onBeginSaveSiteDelegate == null)) {
                this.onBeginSaveSiteDelegate = new BeginOperationDelegate(this.OnBeginSaveSite);
            }
            if ((this.onEndSaveSiteDelegate == null)) {
                this.onEndSaveSiteDelegate = new EndOperationDelegate(this.OnEndSaveSite);
            }
            if ((this.onSaveSiteCompletedDelegate == null)) {
                this.onSaveSiteCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveSiteCompleted);
            }
            base.InvokeAsync(this.onBeginSaveSiteDelegate, new object[] {
                        saveList}, this.onEndSaveSiteDelegate, this.onSaveSiteCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService.BeginListCustomer(System.Nullable<int> orgId, System.Nullable<int> siteId, System.Nullable<int> customerId, string firstName, string lastName, bool hasContracts, System.Nullable<System.DateTime> contractDateStart, System.Nullable<System.DateTime> contractDateEnd, bool includeLegacy, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginListCustomer(orgId, siteId, customerId, firstName, lastName, hasContracts, contractDateStart, contractDateEnd, includeLegacy, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<Medical.Apartment.Common.Customer> Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService.EndListCustomer(System.IAsyncResult result) {
            return base.Channel.EndListCustomer(result);
        }
        
        private System.IAsyncResult OnBeginListCustomer(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Nullable<int> orgId = ((System.Nullable<int>)(inValues[0]));
            System.Nullable<int> siteId = ((System.Nullable<int>)(inValues[1]));
            System.Nullable<int> customerId = ((System.Nullable<int>)(inValues[2]));
            string firstName = ((string)(inValues[3]));
            string lastName = ((string)(inValues[4]));
            bool hasContracts = ((bool)(inValues[5]));
            System.Nullable<System.DateTime> contractDateStart = ((System.Nullable<System.DateTime>)(inValues[6]));
            System.Nullable<System.DateTime> contractDateEnd = ((System.Nullable<System.DateTime>)(inValues[7]));
            bool includeLegacy = ((bool)(inValues[8]));
            return ((Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService)(this)).BeginListCustomer(orgId, siteId, customerId, firstName, lastName, hasContracts, contractDateStart, contractDateEnd, includeLegacy, callback, asyncState);
        }
        
        private object[] OnEndListCustomer(System.IAsyncResult result) {
            System.Collections.Generic.List<Medical.Apartment.Common.Customer> retVal = ((Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService)(this)).EndListCustomer(result);
            return new object[] {
                    retVal};
        }
        
        private void OnListCustomerCompleted(object state) {
            if ((this.ListCustomerCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ListCustomerCompleted(this, new ListCustomerCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ListCustomerAsync(System.Nullable<int> orgId, System.Nullable<int> siteId, System.Nullable<int> customerId, string firstName, string lastName, bool hasContracts, System.Nullable<System.DateTime> contractDateStart, System.Nullable<System.DateTime> contractDateEnd, bool includeLegacy) {
            this.ListCustomerAsync(orgId, siteId, customerId, firstName, lastName, hasContracts, contractDateStart, contractDateEnd, includeLegacy, null);
        }
        
        public void ListCustomerAsync(System.Nullable<int> orgId, System.Nullable<int> siteId, System.Nullable<int> customerId, string firstName, string lastName, bool hasContracts, System.Nullable<System.DateTime> contractDateStart, System.Nullable<System.DateTime> contractDateEnd, bool includeLegacy, object userState) {
            if ((this.onBeginListCustomerDelegate == null)) {
                this.onBeginListCustomerDelegate = new BeginOperationDelegate(this.OnBeginListCustomer);
            }
            if ((this.onEndListCustomerDelegate == null)) {
                this.onEndListCustomerDelegate = new EndOperationDelegate(this.OnEndListCustomer);
            }
            if ((this.onListCustomerCompletedDelegate == null)) {
                this.onListCustomerCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnListCustomerCompleted);
            }
            base.InvokeAsync(this.onBeginListCustomerDelegate, new object[] {
                        orgId,
                        siteId,
                        customerId,
                        firstName,
                        lastName,
                        hasContracts,
                        contractDateStart,
                        contractDateEnd,
                        includeLegacy}, this.onEndListCustomerDelegate, this.onListCustomerCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService.BeginSaveCustomer(System.Collections.Generic.List<Medical.Apartment.Common.Customer> saveList, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSaveCustomer(saveList, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<Medical.Apartment.Common.Customer> Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService.EndSaveCustomer(System.IAsyncResult result) {
            return base.Channel.EndSaveCustomer(result);
        }
        
        private System.IAsyncResult OnBeginSaveCustomer(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.Generic.List<Medical.Apartment.Common.Customer> saveList = ((System.Collections.Generic.List<Medical.Apartment.Common.Customer>)(inValues[0]));
            return ((Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService)(this)).BeginSaveCustomer(saveList, callback, asyncState);
        }
        
        private object[] OnEndSaveCustomer(System.IAsyncResult result) {
            System.Collections.Generic.List<Medical.Apartment.Common.Customer> retVal = ((Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService)(this)).EndSaveCustomer(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSaveCustomerCompleted(object state) {
            if ((this.SaveCustomerCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaveCustomerCompleted(this, new SaveCustomerCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SaveCustomerAsync(System.Collections.Generic.List<Medical.Apartment.Common.Customer> saveList) {
            this.SaveCustomerAsync(saveList, null);
        }
        
        public void SaveCustomerAsync(System.Collections.Generic.List<Medical.Apartment.Common.Customer> saveList, object userState) {
            if ((this.onBeginSaveCustomerDelegate == null)) {
                this.onBeginSaveCustomerDelegate = new BeginOperationDelegate(this.OnBeginSaveCustomer);
            }
            if ((this.onEndSaveCustomerDelegate == null)) {
                this.onEndSaveCustomerDelegate = new EndOperationDelegate(this.OnEndSaveCustomer);
            }
            if ((this.onSaveCustomerCompletedDelegate == null)) {
                this.onSaveCustomerCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveCustomerCompleted);
            }
            base.InvokeAsync(this.onBeginSaveCustomerDelegate, new object[] {
                        saveList}, this.onEndSaveCustomerDelegate, this.onSaveCustomerCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService.BeginListDoctor(System.Nullable<int> orgId, System.Nullable<int> siteId, System.Nullable<int> doctorId, string firstName, string lastName, bool includeLegacy, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginListDoctor(orgId, siteId, doctorId, firstName, lastName, includeLegacy, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<Medical.Apartment.Common.Doctor> Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService.EndListDoctor(System.IAsyncResult result) {
            return base.Channel.EndListDoctor(result);
        }
        
        private System.IAsyncResult OnBeginListDoctor(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Nullable<int> orgId = ((System.Nullable<int>)(inValues[0]));
            System.Nullable<int> siteId = ((System.Nullable<int>)(inValues[1]));
            System.Nullable<int> doctorId = ((System.Nullable<int>)(inValues[2]));
            string firstName = ((string)(inValues[3]));
            string lastName = ((string)(inValues[4]));
            bool includeLegacy = ((bool)(inValues[5]));
            return ((Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService)(this)).BeginListDoctor(orgId, siteId, doctorId, firstName, lastName, includeLegacy, callback, asyncState);
        }
        
        private object[] OnEndListDoctor(System.IAsyncResult result) {
            System.Collections.Generic.List<Medical.Apartment.Common.Doctor> retVal = ((Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService)(this)).EndListDoctor(result);
            return new object[] {
                    retVal};
        }
        
        private void OnListDoctorCompleted(object state) {
            if ((this.ListDoctorCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ListDoctorCompleted(this, new ListDoctorCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ListDoctorAsync(System.Nullable<int> orgId, System.Nullable<int> siteId, System.Nullable<int> doctorId, string firstName, string lastName, bool includeLegacy) {
            this.ListDoctorAsync(orgId, siteId, doctorId, firstName, lastName, includeLegacy, null);
        }
        
        public void ListDoctorAsync(System.Nullable<int> orgId, System.Nullable<int> siteId, System.Nullable<int> doctorId, string firstName, string lastName, bool includeLegacy, object userState) {
            if ((this.onBeginListDoctorDelegate == null)) {
                this.onBeginListDoctorDelegate = new BeginOperationDelegate(this.OnBeginListDoctor);
            }
            if ((this.onEndListDoctorDelegate == null)) {
                this.onEndListDoctorDelegate = new EndOperationDelegate(this.OnEndListDoctor);
            }
            if ((this.onListDoctorCompletedDelegate == null)) {
                this.onListDoctorCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnListDoctorCompleted);
            }
            base.InvokeAsync(this.onBeginListDoctorDelegate, new object[] {
                        orgId,
                        siteId,
                        doctorId,
                        firstName,
                        lastName,
                        includeLegacy}, this.onEndListDoctorDelegate, this.onListDoctorCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService.BeginSaveDoctor(System.Collections.Generic.List<Medical.Apartment.Common.Doctor> saveList, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSaveDoctor(saveList, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<Medical.Apartment.Common.Doctor> Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService.EndSaveDoctor(System.IAsyncResult result) {
            return base.Channel.EndSaveDoctor(result);
        }
        
        private System.IAsyncResult OnBeginSaveDoctor(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.Generic.List<Medical.Apartment.Common.Doctor> saveList = ((System.Collections.Generic.List<Medical.Apartment.Common.Doctor>)(inValues[0]));
            return ((Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService)(this)).BeginSaveDoctor(saveList, callback, asyncState);
        }
        
        private object[] OnEndSaveDoctor(System.IAsyncResult result) {
            System.Collections.Generic.List<Medical.Apartment.Common.Doctor> retVal = ((Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService)(this)).EndSaveDoctor(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSaveDoctorCompleted(object state) {
            if ((this.SaveDoctorCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaveDoctorCompleted(this, new SaveDoctorCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SaveDoctorAsync(System.Collections.Generic.List<Medical.Apartment.Common.Doctor> saveList) {
            this.SaveDoctorAsync(saveList, null);
        }
        
        public void SaveDoctorAsync(System.Collections.Generic.List<Medical.Apartment.Common.Doctor> saveList, object userState) {
            if ((this.onBeginSaveDoctorDelegate == null)) {
                this.onBeginSaveDoctorDelegate = new BeginOperationDelegate(this.OnBeginSaveDoctor);
            }
            if ((this.onEndSaveDoctorDelegate == null)) {
                this.onEndSaveDoctorDelegate = new EndOperationDelegate(this.OnEndSaveDoctor);
            }
            if ((this.onSaveDoctorCompletedDelegate == null)) {
                this.onSaveDoctorCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveDoctorCompleted);
            }
            base.InvokeAsync(this.onBeginSaveDoctorDelegate, new object[] {
                        saveList}, this.onEndSaveDoctorDelegate, this.onSaveDoctorCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService.BeginListAspUser(System.Nullable<int> orgId, System.Nullable<System.Guid> userId, System.Nullable<bool> isLegacy, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginListAspUser(orgId, userId, isLegacy, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<Medical.Apartment.Common.AspUser> Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService.EndListAspUser(System.IAsyncResult result) {
            return base.Channel.EndListAspUser(result);
        }
        
        private System.IAsyncResult OnBeginListAspUser(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Nullable<int> orgId = ((System.Nullable<int>)(inValues[0]));
            System.Nullable<System.Guid> userId = ((System.Nullable<System.Guid>)(inValues[1]));
            System.Nullable<bool> isLegacy = ((System.Nullable<bool>)(inValues[2]));
            return ((Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService)(this)).BeginListAspUser(orgId, userId, isLegacy, callback, asyncState);
        }
        
        private object[] OnEndListAspUser(System.IAsyncResult result) {
            System.Collections.Generic.List<Medical.Apartment.Common.AspUser> retVal = ((Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService)(this)).EndListAspUser(result);
            return new object[] {
                    retVal};
        }
        
        private void OnListAspUserCompleted(object state) {
            if ((this.ListAspUserCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ListAspUserCompleted(this, new ListAspUserCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ListAspUserAsync(System.Nullable<int> orgId, System.Nullable<System.Guid> userId, System.Nullable<bool> isLegacy) {
            this.ListAspUserAsync(orgId, userId, isLegacy, null);
        }
        
        public void ListAspUserAsync(System.Nullable<int> orgId, System.Nullable<System.Guid> userId, System.Nullable<bool> isLegacy, object userState) {
            if ((this.onBeginListAspUserDelegate == null)) {
                this.onBeginListAspUserDelegate = new BeginOperationDelegate(this.OnBeginListAspUser);
            }
            if ((this.onEndListAspUserDelegate == null)) {
                this.onEndListAspUserDelegate = new EndOperationDelegate(this.OnEndListAspUser);
            }
            if ((this.onListAspUserCompletedDelegate == null)) {
                this.onListAspUserCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnListAspUserCompleted);
            }
            base.InvokeAsync(this.onBeginListAspUserDelegate, new object[] {
                        orgId,
                        userId,
                        isLegacy}, this.onEndListAspUserDelegate, this.onListAspUserCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService.BeginListUserName(string applicationName, System.Nullable<int> orgId, string startsWith, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginListUserName(applicationName, orgId, startsWith, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<string> Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService.EndListUserName(System.IAsyncResult result) {
            return base.Channel.EndListUserName(result);
        }
        
        private System.IAsyncResult OnBeginListUserName(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string applicationName = ((string)(inValues[0]));
            System.Nullable<int> orgId = ((System.Nullable<int>)(inValues[1]));
            string startsWith = ((string)(inValues[2]));
            return ((Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService)(this)).BeginListUserName(applicationName, orgId, startsWith, callback, asyncState);
        }
        
        private object[] OnEndListUserName(System.IAsyncResult result) {
            System.Collections.Generic.List<string> retVal = ((Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService)(this)).EndListUserName(result);
            return new object[] {
                    retVal};
        }
        
        private void OnListUserNameCompleted(object state) {
            if ((this.ListUserNameCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ListUserNameCompleted(this, new ListUserNameCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ListUserNameAsync(string applicationName, System.Nullable<int> orgId, string startsWith) {
            this.ListUserNameAsync(applicationName, orgId, startsWith, null);
        }
        
        public void ListUserNameAsync(string applicationName, System.Nullable<int> orgId, string startsWith, object userState) {
            if ((this.onBeginListUserNameDelegate == null)) {
                this.onBeginListUserNameDelegate = new BeginOperationDelegate(this.OnBeginListUserName);
            }
            if ((this.onEndListUserNameDelegate == null)) {
                this.onEndListUserNameDelegate = new EndOperationDelegate(this.OnEndListUserName);
            }
            if ((this.onListUserNameCompletedDelegate == null)) {
                this.onListUserNameCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnListUserNameCompleted);
            }
            base.InvokeAsync(this.onBeginListUserNameDelegate, new object[] {
                        applicationName,
                        orgId,
                        startsWith}, this.onEndListUserNameDelegate, this.onListUserNameCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService.BeginUpdateMembershipUserName(string applicationName, string userName, string newUserName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateMembershipUserName(applicationName, userName, newUserName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Nullable<int> Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService.EndUpdateMembershipUserName(System.IAsyncResult result) {
            return base.Channel.EndUpdateMembershipUserName(result);
        }
        
        private System.IAsyncResult OnBeginUpdateMembershipUserName(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string applicationName = ((string)(inValues[0]));
            string userName = ((string)(inValues[1]));
            string newUserName = ((string)(inValues[2]));
            return ((Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService)(this)).BeginUpdateMembershipUserName(applicationName, userName, newUserName, callback, asyncState);
        }
        
        private object[] OnEndUpdateMembershipUserName(System.IAsyncResult result) {
            System.Nullable<int> retVal = ((Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService)(this)).EndUpdateMembershipUserName(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdateMembershipUserNameCompleted(object state) {
            if ((this.UpdateMembershipUserNameCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateMembershipUserNameCompleted(this, new UpdateMembershipUserNameCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateMembershipUserNameAsync(string applicationName, string userName, string newUserName) {
            this.UpdateMembershipUserNameAsync(applicationName, userName, newUserName, null);
        }
        
        public void UpdateMembershipUserNameAsync(string applicationName, string userName, string newUserName, object userState) {
            if ((this.onBeginUpdateMembershipUserNameDelegate == null)) {
                this.onBeginUpdateMembershipUserNameDelegate = new BeginOperationDelegate(this.OnBeginUpdateMembershipUserName);
            }
            if ((this.onEndUpdateMembershipUserNameDelegate == null)) {
                this.onEndUpdateMembershipUserNameDelegate = new EndOperationDelegate(this.OnEndUpdateMembershipUserName);
            }
            if ((this.onUpdateMembershipUserNameCompletedDelegate == null)) {
                this.onUpdateMembershipUserNameCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateMembershipUserNameCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateMembershipUserNameDelegate, new object[] {
                        applicationName,
                        userName,
                        newUserName}, this.onEndUpdateMembershipUserNameDelegate, this.onUpdateMembershipUserNameCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService.BeginListComponent(System.Nullable<int> componentId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginListComponent(componentId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<Medical.Apartment.Common.Component> Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService.EndListComponent(System.IAsyncResult result) {
            return base.Channel.EndListComponent(result);
        }
        
        private System.IAsyncResult OnBeginListComponent(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Nullable<int> componentId = ((System.Nullable<int>)(inValues[0]));
            return ((Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService)(this)).BeginListComponent(componentId, callback, asyncState);
        }
        
        private object[] OnEndListComponent(System.IAsyncResult result) {
            System.Collections.Generic.List<Medical.Apartment.Common.Component> retVal = ((Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService)(this)).EndListComponent(result);
            return new object[] {
                    retVal};
        }
        
        private void OnListComponentCompleted(object state) {
            if ((this.ListComponentCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ListComponentCompleted(this, new ListComponentCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ListComponentAsync(System.Nullable<int> componentId) {
            this.ListComponentAsync(componentId, null);
        }
        
        public void ListComponentAsync(System.Nullable<int> componentId, object userState) {
            if ((this.onBeginListComponentDelegate == null)) {
                this.onBeginListComponentDelegate = new BeginOperationDelegate(this.OnBeginListComponent);
            }
            if ((this.onEndListComponentDelegate == null)) {
                this.onEndListComponentDelegate = new EndOperationDelegate(this.OnEndListComponent);
            }
            if ((this.onListComponentCompletedDelegate == null)) {
                this.onListComponentCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnListComponentCompleted);
            }
            base.InvokeAsync(this.onBeginListComponentDelegate, new object[] {
                        componentId}, this.onEndListComponentDelegate, this.onListComponentCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService.BeginListRoleComponentPermission(System.Nullable<System.Guid> roleId, System.Nullable<int> componentId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginListRoleComponentPermission(roleId, componentId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<Medical.Apartment.Common.RoleComponentPermission> Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService.EndListRoleComponentPermission(System.IAsyncResult result) {
            return base.Channel.EndListRoleComponentPermission(result);
        }
        
        private System.IAsyncResult OnBeginListRoleComponentPermission(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Nullable<System.Guid> roleId = ((System.Nullable<System.Guid>)(inValues[0]));
            System.Nullable<int> componentId = ((System.Nullable<int>)(inValues[1]));
            return ((Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService)(this)).BeginListRoleComponentPermission(roleId, componentId, callback, asyncState);
        }
        
        private object[] OnEndListRoleComponentPermission(System.IAsyncResult result) {
            System.Collections.Generic.List<Medical.Apartment.Common.RoleComponentPermission> retVal = ((Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService)(this)).EndListRoleComponentPermission(result);
            return new object[] {
                    retVal};
        }
        
        private void OnListRoleComponentPermissionCompleted(object state) {
            if ((this.ListRoleComponentPermissionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ListRoleComponentPermissionCompleted(this, new ListRoleComponentPermissionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ListRoleComponentPermissionAsync(System.Nullable<System.Guid> roleId, System.Nullable<int> componentId) {
            this.ListRoleComponentPermissionAsync(roleId, componentId, null);
        }
        
        public void ListRoleComponentPermissionAsync(System.Nullable<System.Guid> roleId, System.Nullable<int> componentId, object userState) {
            if ((this.onBeginListRoleComponentPermissionDelegate == null)) {
                this.onBeginListRoleComponentPermissionDelegate = new BeginOperationDelegate(this.OnBeginListRoleComponentPermission);
            }
            if ((this.onEndListRoleComponentPermissionDelegate == null)) {
                this.onEndListRoleComponentPermissionDelegate = new EndOperationDelegate(this.OnEndListRoleComponentPermission);
            }
            if ((this.onListRoleComponentPermissionCompletedDelegate == null)) {
                this.onListRoleComponentPermissionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnListRoleComponentPermissionCompleted);
            }
            base.InvokeAsync(this.onBeginListRoleComponentPermissionDelegate, new object[] {
                        roleId,
                        componentId}, this.onEndListRoleComponentPermissionDelegate, this.onListRoleComponentPermissionCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService.BeginListRoleComponentPermissionByUser(System.Nullable<System.Guid> userId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginListRoleComponentPermissionByUser(userId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<Medical.Apartment.Common.RoleComponentPermission> Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService.EndListRoleComponentPermissionByUser(System.IAsyncResult result) {
            return base.Channel.EndListRoleComponentPermissionByUser(result);
        }
        
        private System.IAsyncResult OnBeginListRoleComponentPermissionByUser(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Nullable<System.Guid> userId = ((System.Nullable<System.Guid>)(inValues[0]));
            return ((Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService)(this)).BeginListRoleComponentPermissionByUser(userId, callback, asyncState);
        }
        
        private object[] OnEndListRoleComponentPermissionByUser(System.IAsyncResult result) {
            System.Collections.Generic.List<Medical.Apartment.Common.RoleComponentPermission> retVal = ((Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService)(this)).EndListRoleComponentPermissionByUser(result);
            return new object[] {
                    retVal};
        }
        
        private void OnListRoleComponentPermissionByUserCompleted(object state) {
            if ((this.ListRoleComponentPermissionByUserCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ListRoleComponentPermissionByUserCompleted(this, new ListRoleComponentPermissionByUserCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ListRoleComponentPermissionByUserAsync(System.Nullable<System.Guid> userId) {
            this.ListRoleComponentPermissionByUserAsync(userId, null);
        }
        
        public void ListRoleComponentPermissionByUserAsync(System.Nullable<System.Guid> userId, object userState) {
            if ((this.onBeginListRoleComponentPermissionByUserDelegate == null)) {
                this.onBeginListRoleComponentPermissionByUserDelegate = new BeginOperationDelegate(this.OnBeginListRoleComponentPermissionByUser);
            }
            if ((this.onEndListRoleComponentPermissionByUserDelegate == null)) {
                this.onEndListRoleComponentPermissionByUserDelegate = new EndOperationDelegate(this.OnEndListRoleComponentPermissionByUser);
            }
            if ((this.onListRoleComponentPermissionByUserCompletedDelegate == null)) {
                this.onListRoleComponentPermissionByUserCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnListRoleComponentPermissionByUserCompleted);
            }
            base.InvokeAsync(this.onBeginListRoleComponentPermissionByUserDelegate, new object[] {
                        userId}, this.onEndListRoleComponentPermissionByUserDelegate, this.onListRoleComponentPermissionByUserCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService.BeginSaveRoleComponentPermission(System.Collections.Generic.List<Medical.Apartment.Common.RoleComponentPermission> saveList, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSaveRoleComponentPermission(saveList, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService.EndSaveRoleComponentPermission(System.IAsyncResult result) {
            base.Channel.EndSaveRoleComponentPermission(result);
        }
        
        private System.IAsyncResult OnBeginSaveRoleComponentPermission(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.Generic.List<Medical.Apartment.Common.RoleComponentPermission> saveList = ((System.Collections.Generic.List<Medical.Apartment.Common.RoleComponentPermission>)(inValues[0]));
            return ((Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService)(this)).BeginSaveRoleComponentPermission(saveList, callback, asyncState);
        }
        
        private object[] OnEndSaveRoleComponentPermission(System.IAsyncResult result) {
            ((Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService)(this)).EndSaveRoleComponentPermission(result);
            return null;
        }
        
        private void OnSaveRoleComponentPermissionCompleted(object state) {
            if ((this.SaveRoleComponentPermissionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaveRoleComponentPermissionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SaveRoleComponentPermissionAsync(System.Collections.Generic.List<Medical.Apartment.Common.RoleComponentPermission> saveList) {
            this.SaveRoleComponentPermissionAsync(saveList, null);
        }
        
        public void SaveRoleComponentPermissionAsync(System.Collections.Generic.List<Medical.Apartment.Common.RoleComponentPermission> saveList, object userState) {
            if ((this.onBeginSaveRoleComponentPermissionDelegate == null)) {
                this.onBeginSaveRoleComponentPermissionDelegate = new BeginOperationDelegate(this.OnBeginSaveRoleComponentPermission);
            }
            if ((this.onEndSaveRoleComponentPermissionDelegate == null)) {
                this.onEndSaveRoleComponentPermissionDelegate = new EndOperationDelegate(this.OnEndSaveRoleComponentPermission);
            }
            if ((this.onSaveRoleComponentPermissionCompletedDelegate == null)) {
                this.onSaveRoleComponentPermissionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveRoleComponentPermissionCompleted);
            }
            base.InvokeAsync(this.onBeginSaveRoleComponentPermissionDelegate, new object[] {
                        saveList}, this.onEndSaveRoleComponentPermissionDelegate, this.onSaveRoleComponentPermissionCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService.BeginListAspRole(System.Nullable<System.Guid> roleId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginListAspRole(roleId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<Medical.Apartment.Common.AspRole> Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService.EndListAspRole(System.IAsyncResult result) {
            return base.Channel.EndListAspRole(result);
        }
        
        private System.IAsyncResult OnBeginListAspRole(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Nullable<System.Guid> roleId = ((System.Nullable<System.Guid>)(inValues[0]));
            return ((Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService)(this)).BeginListAspRole(roleId, callback, asyncState);
        }
        
        private object[] OnEndListAspRole(System.IAsyncResult result) {
            System.Collections.Generic.List<Medical.Apartment.Common.AspRole> retVal = ((Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService)(this)).EndListAspRole(result);
            return new object[] {
                    retVal};
        }
        
        private void OnListAspRoleCompleted(object state) {
            if ((this.ListAspRoleCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ListAspRoleCompleted(this, new ListAspRoleCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ListAspRoleAsync(System.Nullable<System.Guid> roleId) {
            this.ListAspRoleAsync(roleId, null);
        }
        
        public void ListAspRoleAsync(System.Nullable<System.Guid> roleId, object userState) {
            if ((this.onBeginListAspRoleDelegate == null)) {
                this.onBeginListAspRoleDelegate = new BeginOperationDelegate(this.OnBeginListAspRole);
            }
            if ((this.onEndListAspRoleDelegate == null)) {
                this.onEndListAspRoleDelegate = new EndOperationDelegate(this.OnEndListAspRole);
            }
            if ((this.onListAspRoleCompletedDelegate == null)) {
                this.onListAspRoleCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnListAspRoleCompleted);
            }
            base.InvokeAsync(this.onBeginListAspRoleDelegate, new object[] {
                        roleId}, this.onEndListAspRoleDelegate, this.onListAspRoleCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService.BeginSaveAspRole(System.Collections.Generic.List<Medical.Apartment.Common.AspRole> saveList, string currentUser, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSaveAspRole(saveList, currentUser, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService.EndSaveAspRole(System.IAsyncResult result) {
            base.Channel.EndSaveAspRole(result);
        }
        
        private System.IAsyncResult OnBeginSaveAspRole(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.Generic.List<Medical.Apartment.Common.AspRole> saveList = ((System.Collections.Generic.List<Medical.Apartment.Common.AspRole>)(inValues[0]));
            string currentUser = ((string)(inValues[1]));
            return ((Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService)(this)).BeginSaveAspRole(saveList, currentUser, callback, asyncState);
        }
        
        private object[] OnEndSaveAspRole(System.IAsyncResult result) {
            ((Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService)(this)).EndSaveAspRole(result);
            return null;
        }
        
        private void OnSaveAspRoleCompleted(object state) {
            if ((this.SaveAspRoleCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaveAspRoleCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SaveAspRoleAsync(System.Collections.Generic.List<Medical.Apartment.Common.AspRole> saveList, string currentUser) {
            this.SaveAspRoleAsync(saveList, currentUser, null);
        }
        
        public void SaveAspRoleAsync(System.Collections.Generic.List<Medical.Apartment.Common.AspRole> saveList, string currentUser, object userState) {
            if ((this.onBeginSaveAspRoleDelegate == null)) {
                this.onBeginSaveAspRoleDelegate = new BeginOperationDelegate(this.OnBeginSaveAspRole);
            }
            if ((this.onEndSaveAspRoleDelegate == null)) {
                this.onEndSaveAspRoleDelegate = new EndOperationDelegate(this.OnEndSaveAspRole);
            }
            if ((this.onSaveAspRoleCompletedDelegate == null)) {
                this.onSaveAspRoleCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveAspRoleCompleted);
            }
            base.InvokeAsync(this.onBeginSaveAspRoleDelegate, new object[] {
                        saveList,
                        currentUser}, this.onEndSaveAspRoleDelegate, this.onSaveAspRoleCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService.BeginListUserRoleAuth(System.Nullable<int> orgId, System.Nullable<System.Guid> userId, System.Nullable<System.Guid> roleId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginListUserRoleAuth(orgId, userId, roleId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<Medical.Apartment.Common.UserRoleAuth> Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService.EndListUserRoleAuth(System.IAsyncResult result) {
            return base.Channel.EndListUserRoleAuth(result);
        }
        
        private System.IAsyncResult OnBeginListUserRoleAuth(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Nullable<int> orgId = ((System.Nullable<int>)(inValues[0]));
            System.Nullable<System.Guid> userId = ((System.Nullable<System.Guid>)(inValues[1]));
            System.Nullable<System.Guid> roleId = ((System.Nullable<System.Guid>)(inValues[2]));
            return ((Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService)(this)).BeginListUserRoleAuth(orgId, userId, roleId, callback, asyncState);
        }
        
        private object[] OnEndListUserRoleAuth(System.IAsyncResult result) {
            System.Collections.Generic.List<Medical.Apartment.Common.UserRoleAuth> retVal = ((Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService)(this)).EndListUserRoleAuth(result);
            return new object[] {
                    retVal};
        }
        
        private void OnListUserRoleAuthCompleted(object state) {
            if ((this.ListUserRoleAuthCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ListUserRoleAuthCompleted(this, new ListUserRoleAuthCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ListUserRoleAuthAsync(System.Nullable<int> orgId, System.Nullable<System.Guid> userId, System.Nullable<System.Guid> roleId) {
            this.ListUserRoleAuthAsync(orgId, userId, roleId, null);
        }
        
        public void ListUserRoleAuthAsync(System.Nullable<int> orgId, System.Nullable<System.Guid> userId, System.Nullable<System.Guid> roleId, object userState) {
            if ((this.onBeginListUserRoleAuthDelegate == null)) {
                this.onBeginListUserRoleAuthDelegate = new BeginOperationDelegate(this.OnBeginListUserRoleAuth);
            }
            if ((this.onEndListUserRoleAuthDelegate == null)) {
                this.onEndListUserRoleAuthDelegate = new EndOperationDelegate(this.OnEndListUserRoleAuth);
            }
            if ((this.onListUserRoleAuthCompletedDelegate == null)) {
                this.onListUserRoleAuthCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnListUserRoleAuthCompleted);
            }
            base.InvokeAsync(this.onBeginListUserRoleAuthDelegate, new object[] {
                        orgId,
                        userId,
                        roleId}, this.onEndListUserRoleAuthDelegate, this.onListUserRoleAuthCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService.BeginSaveUserRoleAuth(System.Collections.Generic.List<Medical.Apartment.Common.UserRoleAuth> saveList, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSaveUserRoleAuth(saveList, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService.EndSaveUserRoleAuth(System.IAsyncResult result) {
            base.Channel.EndSaveUserRoleAuth(result);
        }
        
        private System.IAsyncResult OnBeginSaveUserRoleAuth(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.Generic.List<Medical.Apartment.Common.UserRoleAuth> saveList = ((System.Collections.Generic.List<Medical.Apartment.Common.UserRoleAuth>)(inValues[0]));
            return ((Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService)(this)).BeginSaveUserRoleAuth(saveList, callback, asyncState);
        }
        
        private object[] OnEndSaveUserRoleAuth(System.IAsyncResult result) {
            ((Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService)(this)).EndSaveUserRoleAuth(result);
            return null;
        }
        
        private void OnSaveUserRoleAuthCompleted(object state) {
            if ((this.SaveUserRoleAuthCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaveUserRoleAuthCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SaveUserRoleAuthAsync(System.Collections.Generic.List<Medical.Apartment.Common.UserRoleAuth> saveList) {
            this.SaveUserRoleAuthAsync(saveList, null);
        }
        
        public void SaveUserRoleAuthAsync(System.Collections.Generic.List<Medical.Apartment.Common.UserRoleAuth> saveList, object userState) {
            if ((this.onBeginSaveUserRoleAuthDelegate == null)) {
                this.onBeginSaveUserRoleAuthDelegate = new BeginOperationDelegate(this.OnBeginSaveUserRoleAuth);
            }
            if ((this.onEndSaveUserRoleAuthDelegate == null)) {
                this.onEndSaveUserRoleAuthDelegate = new EndOperationDelegate(this.OnEndSaveUserRoleAuth);
            }
            if ((this.onSaveUserRoleAuthCompletedDelegate == null)) {
                this.onSaveUserRoleAuthCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveUserRoleAuthCompleted);
            }
            base.InvokeAsync(this.onBeginSaveUserRoleAuthDelegate, new object[] {
                        saveList}, this.onEndSaveUserRoleAuthDelegate, this.onSaveUserRoleAuthCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService.BeginListMedicine(System.Nullable<int> organisationId, System.Nullable<int> medicineId, bool showLegacy, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginListMedicine(organisationId, medicineId, showLegacy, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<Medical.Apartment.Common.Medicine> Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService.EndListMedicine(System.IAsyncResult result) {
            return base.Channel.EndListMedicine(result);
        }
        
        private System.IAsyncResult OnBeginListMedicine(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Nullable<int> organisationId = ((System.Nullable<int>)(inValues[0]));
            System.Nullable<int> medicineId = ((System.Nullable<int>)(inValues[1]));
            bool showLegacy = ((bool)(inValues[2]));
            return ((Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService)(this)).BeginListMedicine(organisationId, medicineId, showLegacy, callback, asyncState);
        }
        
        private object[] OnEndListMedicine(System.IAsyncResult result) {
            System.Collections.Generic.List<Medical.Apartment.Common.Medicine> retVal = ((Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService)(this)).EndListMedicine(result);
            return new object[] {
                    retVal};
        }
        
        private void OnListMedicineCompleted(object state) {
            if ((this.ListMedicineCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ListMedicineCompleted(this, new ListMedicineCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ListMedicineAsync(System.Nullable<int> organisationId, System.Nullable<int> medicineId, bool showLegacy) {
            this.ListMedicineAsync(organisationId, medicineId, showLegacy, null);
        }
        
        public void ListMedicineAsync(System.Nullable<int> organisationId, System.Nullable<int> medicineId, bool showLegacy, object userState) {
            if ((this.onBeginListMedicineDelegate == null)) {
                this.onBeginListMedicineDelegate = new BeginOperationDelegate(this.OnBeginListMedicine);
            }
            if ((this.onEndListMedicineDelegate == null)) {
                this.onEndListMedicineDelegate = new EndOperationDelegate(this.OnEndListMedicine);
            }
            if ((this.onListMedicineCompletedDelegate == null)) {
                this.onListMedicineCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnListMedicineCompleted);
            }
            base.InvokeAsync(this.onBeginListMedicineDelegate, new object[] {
                        organisationId,
                        medicineId,
                        showLegacy}, this.onEndListMedicineDelegate, this.onListMedicineCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService.BeginSaveMedicine(System.Collections.Generic.List<Medical.Apartment.Common.Medicine> saveList, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSaveMedicine(saveList, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService.EndSaveMedicine(System.IAsyncResult result) {
            base.Channel.EndSaveMedicine(result);
        }
        
        private System.IAsyncResult OnBeginSaveMedicine(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.Generic.List<Medical.Apartment.Common.Medicine> saveList = ((System.Collections.Generic.List<Medical.Apartment.Common.Medicine>)(inValues[0]));
            return ((Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService)(this)).BeginSaveMedicine(saveList, callback, asyncState);
        }
        
        private object[] OnEndSaveMedicine(System.IAsyncResult result) {
            ((Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService)(this)).EndSaveMedicine(result);
            return null;
        }
        
        private void OnSaveMedicineCompleted(object state) {
            if ((this.SaveMedicineCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaveMedicineCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SaveMedicineAsync(System.Collections.Generic.List<Medical.Apartment.Common.Medicine> saveList) {
            this.SaveMedicineAsync(saveList, null);
        }
        
        public void SaveMedicineAsync(System.Collections.Generic.List<Medical.Apartment.Common.Medicine> saveList, object userState) {
            if ((this.onBeginSaveMedicineDelegate == null)) {
                this.onBeginSaveMedicineDelegate = new BeginOperationDelegate(this.OnBeginSaveMedicine);
            }
            if ((this.onEndSaveMedicineDelegate == null)) {
                this.onEndSaveMedicineDelegate = new EndOperationDelegate(this.OnEndSaveMedicine);
            }
            if ((this.onSaveMedicineCompletedDelegate == null)) {
                this.onSaveMedicineCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveMedicineCompleted);
            }
            base.InvokeAsync(this.onBeginSaveMedicineDelegate, new object[] {
                        saveList}, this.onEndSaveMedicineDelegate, this.onSaveMedicineCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService.BeginListSiteMedicineStatus(int siteId, System.Nullable<int> medicineId, System.DateTime dateFrom, System.DateTime dateTo, bool showLegacy, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginListSiteMedicineStatus(siteId, medicineId, dateFrom, dateTo, showLegacy, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<Medical.Apartment.Common.Medicine> Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService.EndListSiteMedicineStatus(System.IAsyncResult result) {
            return base.Channel.EndListSiteMedicineStatus(result);
        }
        
        private System.IAsyncResult OnBeginListSiteMedicineStatus(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int siteId = ((int)(inValues[0]));
            System.Nullable<int> medicineId = ((System.Nullable<int>)(inValues[1]));
            System.DateTime dateFrom = ((System.DateTime)(inValues[2]));
            System.DateTime dateTo = ((System.DateTime)(inValues[3]));
            bool showLegacy = ((bool)(inValues[4]));
            return ((Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService)(this)).BeginListSiteMedicineStatus(siteId, medicineId, dateFrom, dateTo, showLegacy, callback, asyncState);
        }
        
        private object[] OnEndListSiteMedicineStatus(System.IAsyncResult result) {
            System.Collections.Generic.List<Medical.Apartment.Common.Medicine> retVal = ((Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService)(this)).EndListSiteMedicineStatus(result);
            return new object[] {
                    retVal};
        }
        
        private void OnListSiteMedicineStatusCompleted(object state) {
            if ((this.ListSiteMedicineStatusCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ListSiteMedicineStatusCompleted(this, new ListSiteMedicineStatusCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ListSiteMedicineStatusAsync(int siteId, System.Nullable<int> medicineId, System.DateTime dateFrom, System.DateTime dateTo, bool showLegacy) {
            this.ListSiteMedicineStatusAsync(siteId, medicineId, dateFrom, dateTo, showLegacy, null);
        }
        
        public void ListSiteMedicineStatusAsync(int siteId, System.Nullable<int> medicineId, System.DateTime dateFrom, System.DateTime dateTo, bool showLegacy, object userState) {
            if ((this.onBeginListSiteMedicineStatusDelegate == null)) {
                this.onBeginListSiteMedicineStatusDelegate = new BeginOperationDelegate(this.OnBeginListSiteMedicineStatus);
            }
            if ((this.onEndListSiteMedicineStatusDelegate == null)) {
                this.onEndListSiteMedicineStatusDelegate = new EndOperationDelegate(this.OnEndListSiteMedicineStatus);
            }
            if ((this.onListSiteMedicineStatusCompletedDelegate == null)) {
                this.onListSiteMedicineStatusCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnListSiteMedicineStatusCompleted);
            }
            base.InvokeAsync(this.onBeginListSiteMedicineStatusDelegate, new object[] {
                        siteId,
                        medicineId,
                        dateFrom,
                        dateTo,
                        showLegacy}, this.onEndListSiteMedicineStatusDelegate, this.onListSiteMedicineStatusCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService.BeginListMedicineInput(int siteId, System.Nullable<int> medicineId, System.DateTime dateFrom, System.DateTime dateTo, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginListMedicineInput(siteId, medicineId, dateFrom, dateTo, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<Medical.Apartment.Common.MedicineInput> Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService.EndListMedicineInput(System.IAsyncResult result) {
            return base.Channel.EndListMedicineInput(result);
        }
        
        private System.IAsyncResult OnBeginListMedicineInput(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int siteId = ((int)(inValues[0]));
            System.Nullable<int> medicineId = ((System.Nullable<int>)(inValues[1]));
            System.DateTime dateFrom = ((System.DateTime)(inValues[2]));
            System.DateTime dateTo = ((System.DateTime)(inValues[3]));
            return ((Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService)(this)).BeginListMedicineInput(siteId, medicineId, dateFrom, dateTo, callback, asyncState);
        }
        
        private object[] OnEndListMedicineInput(System.IAsyncResult result) {
            System.Collections.Generic.List<Medical.Apartment.Common.MedicineInput> retVal = ((Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService)(this)).EndListMedicineInput(result);
            return new object[] {
                    retVal};
        }
        
        private void OnListMedicineInputCompleted(object state) {
            if ((this.ListMedicineInputCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ListMedicineInputCompleted(this, new ListMedicineInputCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ListMedicineInputAsync(int siteId, System.Nullable<int> medicineId, System.DateTime dateFrom, System.DateTime dateTo) {
            this.ListMedicineInputAsync(siteId, medicineId, dateFrom, dateTo, null);
        }
        
        public void ListMedicineInputAsync(int siteId, System.Nullable<int> medicineId, System.DateTime dateFrom, System.DateTime dateTo, object userState) {
            if ((this.onBeginListMedicineInputDelegate == null)) {
                this.onBeginListMedicineInputDelegate = new BeginOperationDelegate(this.OnBeginListMedicineInput);
            }
            if ((this.onEndListMedicineInputDelegate == null)) {
                this.onEndListMedicineInputDelegate = new EndOperationDelegate(this.OnEndListMedicineInput);
            }
            if ((this.onListMedicineInputCompletedDelegate == null)) {
                this.onListMedicineInputCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnListMedicineInputCompleted);
            }
            base.InvokeAsync(this.onBeginListMedicineInputDelegate, new object[] {
                        siteId,
                        medicineId,
                        dateFrom,
                        dateTo}, this.onEndListMedicineInputDelegate, this.onListMedicineInputCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService.BeginSaveMedicineInput(System.Collections.Generic.List<Medical.Apartment.Common.MedicineInput> saveList, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSaveMedicineInput(saveList, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService.EndSaveMedicineInput(System.IAsyncResult result) {
            base.Channel.EndSaveMedicineInput(result);
        }
        
        private System.IAsyncResult OnBeginSaveMedicineInput(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.Generic.List<Medical.Apartment.Common.MedicineInput> saveList = ((System.Collections.Generic.List<Medical.Apartment.Common.MedicineInput>)(inValues[0]));
            return ((Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService)(this)).BeginSaveMedicineInput(saveList, callback, asyncState);
        }
        
        private object[] OnEndSaveMedicineInput(System.IAsyncResult result) {
            ((Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService)(this)).EndSaveMedicineInput(result);
            return null;
        }
        
        private void OnSaveMedicineInputCompleted(object state) {
            if ((this.SaveMedicineInputCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaveMedicineInputCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SaveMedicineInputAsync(System.Collections.Generic.List<Medical.Apartment.Common.MedicineInput> saveList) {
            this.SaveMedicineInputAsync(saveList, null);
        }
        
        public void SaveMedicineInputAsync(System.Collections.Generic.List<Medical.Apartment.Common.MedicineInput> saveList, object userState) {
            if ((this.onBeginSaveMedicineInputDelegate == null)) {
                this.onBeginSaveMedicineInputDelegate = new BeginOperationDelegate(this.OnBeginSaveMedicineInput);
            }
            if ((this.onEndSaveMedicineInputDelegate == null)) {
                this.onEndSaveMedicineInputDelegate = new EndOperationDelegate(this.OnEndSaveMedicineInput);
            }
            if ((this.onSaveMedicineInputCompletedDelegate == null)) {
                this.onSaveMedicineInputCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveMedicineInputCompleted);
            }
            base.InvokeAsync(this.onBeginSaveMedicineInputDelegate, new object[] {
                        saveList}, this.onEndSaveMedicineInputDelegate, this.onSaveMedicineInputCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService.BeginListService(System.Nullable<int> organisationId, System.Nullable<int> serviceId, bool showLegacy, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginListService(organisationId, serviceId, showLegacy, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<Medical.Apartment.Common.Service> Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService.EndListService(System.IAsyncResult result) {
            return base.Channel.EndListService(result);
        }
        
        private System.IAsyncResult OnBeginListService(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Nullable<int> organisationId = ((System.Nullable<int>)(inValues[0]));
            System.Nullable<int> serviceId = ((System.Nullable<int>)(inValues[1]));
            bool showLegacy = ((bool)(inValues[2]));
            return ((Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService)(this)).BeginListService(organisationId, serviceId, showLegacy, callback, asyncState);
        }
        
        private object[] OnEndListService(System.IAsyncResult result) {
            System.Collections.Generic.List<Medical.Apartment.Common.Service> retVal = ((Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService)(this)).EndListService(result);
            return new object[] {
                    retVal};
        }
        
        private void OnListServiceCompleted(object state) {
            if ((this.ListServiceCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ListServiceCompleted(this, new ListServiceCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ListServiceAsync(System.Nullable<int> organisationId, System.Nullable<int> serviceId, bool showLegacy) {
            this.ListServiceAsync(organisationId, serviceId, showLegacy, null);
        }
        
        public void ListServiceAsync(System.Nullable<int> organisationId, System.Nullable<int> serviceId, bool showLegacy, object userState) {
            if ((this.onBeginListServiceDelegate == null)) {
                this.onBeginListServiceDelegate = new BeginOperationDelegate(this.OnBeginListService);
            }
            if ((this.onEndListServiceDelegate == null)) {
                this.onEndListServiceDelegate = new EndOperationDelegate(this.OnEndListService);
            }
            if ((this.onListServiceCompletedDelegate == null)) {
                this.onListServiceCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnListServiceCompleted);
            }
            base.InvokeAsync(this.onBeginListServiceDelegate, new object[] {
                        organisationId,
                        serviceId,
                        showLegacy}, this.onEndListServiceDelegate, this.onListServiceCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService.BeginSaveService(System.Collections.Generic.List<Medical.Apartment.Common.Service> saveList, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSaveService(saveList, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService.EndSaveService(System.IAsyncResult result) {
            base.Channel.EndSaveService(result);
        }
        
        private System.IAsyncResult OnBeginSaveService(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.Generic.List<Medical.Apartment.Common.Service> saveList = ((System.Collections.Generic.List<Medical.Apartment.Common.Service>)(inValues[0]));
            return ((Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService)(this)).BeginSaveService(saveList, callback, asyncState);
        }
        
        private object[] OnEndSaveService(System.IAsyncResult result) {
            ((Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService)(this)).EndSaveService(result);
            return null;
        }
        
        private void OnSaveServiceCompleted(object state) {
            if ((this.SaveServiceCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaveServiceCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SaveServiceAsync(System.Collections.Generic.List<Medical.Apartment.Common.Service> saveList) {
            this.SaveServiceAsync(saveList, null);
        }
        
        public void SaveServiceAsync(System.Collections.Generic.List<Medical.Apartment.Common.Service> saveList, object userState) {
            if ((this.onBeginSaveServiceDelegate == null)) {
                this.onBeginSaveServiceDelegate = new BeginOperationDelegate(this.OnBeginSaveService);
            }
            if ((this.onEndSaveServiceDelegate == null)) {
                this.onEndSaveServiceDelegate = new EndOperationDelegate(this.OnEndSaveService);
            }
            if ((this.onSaveServiceCompletedDelegate == null)) {
                this.onSaveServiceCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveServiceCompleted);
            }
            base.InvokeAsync(this.onBeginSaveServiceDelegate, new object[] {
                        saveList}, this.onEndSaveServiceDelegate, this.onSaveServiceCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService.BeginListImage(System.Nullable<int> imageId, System.Nullable<int> itemId, System.Nullable<int> imageTypeId, int loadType, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginListImage(imageId, itemId, imageTypeId, loadType, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<Medical.Apartment.Common.Image> Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService.EndListImage(System.IAsyncResult result) {
            return base.Channel.EndListImage(result);
        }
        
        private System.IAsyncResult OnBeginListImage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Nullable<int> imageId = ((System.Nullable<int>)(inValues[0]));
            System.Nullable<int> itemId = ((System.Nullable<int>)(inValues[1]));
            System.Nullable<int> imageTypeId = ((System.Nullable<int>)(inValues[2]));
            int loadType = ((int)(inValues[3]));
            return ((Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService)(this)).BeginListImage(imageId, itemId, imageTypeId, loadType, callback, asyncState);
        }
        
        private object[] OnEndListImage(System.IAsyncResult result) {
            System.Collections.Generic.List<Medical.Apartment.Common.Image> retVal = ((Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService)(this)).EndListImage(result);
            return new object[] {
                    retVal};
        }
        
        private void OnListImageCompleted(object state) {
            if ((this.ListImageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ListImageCompleted(this, new ListImageCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ListImageAsync(System.Nullable<int> imageId, System.Nullable<int> itemId, System.Nullable<int> imageTypeId, int loadType) {
            this.ListImageAsync(imageId, itemId, imageTypeId, loadType, null);
        }
        
        public void ListImageAsync(System.Nullable<int> imageId, System.Nullable<int> itemId, System.Nullable<int> imageTypeId, int loadType, object userState) {
            if ((this.onBeginListImageDelegate == null)) {
                this.onBeginListImageDelegate = new BeginOperationDelegate(this.OnBeginListImage);
            }
            if ((this.onEndListImageDelegate == null)) {
                this.onEndListImageDelegate = new EndOperationDelegate(this.OnEndListImage);
            }
            if ((this.onListImageCompletedDelegate == null)) {
                this.onListImageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnListImageCompleted);
            }
            base.InvokeAsync(this.onBeginListImageDelegate, new object[] {
                        imageId,
                        itemId,
                        imageTypeId,
                        loadType}, this.onEndListImageDelegate, this.onListImageCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService.BeginSaveImage(System.Collections.Generic.List<Medical.Apartment.Common.Image> saveList, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSaveImage(saveList, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService.EndSaveImage(System.IAsyncResult result) {
            base.Channel.EndSaveImage(result);
        }
        
        private System.IAsyncResult OnBeginSaveImage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.Generic.List<Medical.Apartment.Common.Image> saveList = ((System.Collections.Generic.List<Medical.Apartment.Common.Image>)(inValues[0]));
            return ((Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService)(this)).BeginSaveImage(saveList, callback, asyncState);
        }
        
        private object[] OnEndSaveImage(System.IAsyncResult result) {
            ((Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService)(this)).EndSaveImage(result);
            return null;
        }
        
        private void OnSaveImageCompleted(object state) {
            if ((this.SaveImageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaveImageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SaveImageAsync(System.Collections.Generic.List<Medical.Apartment.Common.Image> saveList) {
            this.SaveImageAsync(saveList, null);
        }
        
        public void SaveImageAsync(System.Collections.Generic.List<Medical.Apartment.Common.Image> saveList, object userState) {
            if ((this.onBeginSaveImageDelegate == null)) {
                this.onBeginSaveImageDelegate = new BeginOperationDelegate(this.OnBeginSaveImage);
            }
            if ((this.onEndSaveImageDelegate == null)) {
                this.onEndSaveImageDelegate = new EndOperationDelegate(this.OnEndSaveImage);
            }
            if ((this.onSaveImageCompletedDelegate == null)) {
                this.onSaveImageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveImageCompleted);
            }
            base.InvokeAsync(this.onBeginSaveImageDelegate, new object[] {
                        saveList}, this.onEndSaveImageDelegate, this.onSaveImageCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService.BeginListTreatment(int orgId, System.Nullable<int> siteId, System.Nullable<int> customerId, System.Nullable<int> doctorId, System.Nullable<int> treatmentId, System.Nullable<System.DateTime> dateStart, System.Nullable<System.DateTime> dateEnd, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginListTreatment(orgId, siteId, customerId, doctorId, treatmentId, dateStart, dateEnd, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<Medical.Apartment.Common.Treatment> Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService.EndListTreatment(System.IAsyncResult result) {
            return base.Channel.EndListTreatment(result);
        }
        
        private System.IAsyncResult OnBeginListTreatment(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int orgId = ((int)(inValues[0]));
            System.Nullable<int> siteId = ((System.Nullable<int>)(inValues[1]));
            System.Nullable<int> customerId = ((System.Nullable<int>)(inValues[2]));
            System.Nullable<int> doctorId = ((System.Nullable<int>)(inValues[3]));
            System.Nullable<int> treatmentId = ((System.Nullable<int>)(inValues[4]));
            System.Nullable<System.DateTime> dateStart = ((System.Nullable<System.DateTime>)(inValues[5]));
            System.Nullable<System.DateTime> dateEnd = ((System.Nullable<System.DateTime>)(inValues[6]));
            return ((Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService)(this)).BeginListTreatment(orgId, siteId, customerId, doctorId, treatmentId, dateStart, dateEnd, callback, asyncState);
        }
        
        private object[] OnEndListTreatment(System.IAsyncResult result) {
            System.Collections.Generic.List<Medical.Apartment.Common.Treatment> retVal = ((Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService)(this)).EndListTreatment(result);
            return new object[] {
                    retVal};
        }
        
        private void OnListTreatmentCompleted(object state) {
            if ((this.ListTreatmentCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ListTreatmentCompleted(this, new ListTreatmentCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ListTreatmentAsync(int orgId, System.Nullable<int> siteId, System.Nullable<int> customerId, System.Nullable<int> doctorId, System.Nullable<int> treatmentId, System.Nullable<System.DateTime> dateStart, System.Nullable<System.DateTime> dateEnd) {
            this.ListTreatmentAsync(orgId, siteId, customerId, doctorId, treatmentId, dateStart, dateEnd, null);
        }
        
        public void ListTreatmentAsync(int orgId, System.Nullable<int> siteId, System.Nullable<int> customerId, System.Nullable<int> doctorId, System.Nullable<int> treatmentId, System.Nullable<System.DateTime> dateStart, System.Nullable<System.DateTime> dateEnd, object userState) {
            if ((this.onBeginListTreatmentDelegate == null)) {
                this.onBeginListTreatmentDelegate = new BeginOperationDelegate(this.OnBeginListTreatment);
            }
            if ((this.onEndListTreatmentDelegate == null)) {
                this.onEndListTreatmentDelegate = new EndOperationDelegate(this.OnEndListTreatment);
            }
            if ((this.onListTreatmentCompletedDelegate == null)) {
                this.onListTreatmentCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnListTreatmentCompleted);
            }
            base.InvokeAsync(this.onBeginListTreatmentDelegate, new object[] {
                        orgId,
                        siteId,
                        customerId,
                        doctorId,
                        treatmentId,
                        dateStart,
                        dateEnd}, this.onEndListTreatmentDelegate, this.onListTreatmentCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService.BeginSaveTreatment(System.Collections.Generic.List<Medical.Apartment.Common.Treatment> saveList, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSaveTreatment(saveList, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService.EndSaveTreatment(System.IAsyncResult result) {
            base.Channel.EndSaveTreatment(result);
        }
        
        private System.IAsyncResult OnBeginSaveTreatment(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.Generic.List<Medical.Apartment.Common.Treatment> saveList = ((System.Collections.Generic.List<Medical.Apartment.Common.Treatment>)(inValues[0]));
            return ((Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService)(this)).BeginSaveTreatment(saveList, callback, asyncState);
        }
        
        private object[] OnEndSaveTreatment(System.IAsyncResult result) {
            ((Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService)(this)).EndSaveTreatment(result);
            return null;
        }
        
        private void OnSaveTreatmentCompleted(object state) {
            if ((this.SaveTreatmentCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaveTreatmentCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SaveTreatmentAsync(System.Collections.Generic.List<Medical.Apartment.Common.Treatment> saveList) {
            this.SaveTreatmentAsync(saveList, null);
        }
        
        public void SaveTreatmentAsync(System.Collections.Generic.List<Medical.Apartment.Common.Treatment> saveList, object userState) {
            if ((this.onBeginSaveTreatmentDelegate == null)) {
                this.onBeginSaveTreatmentDelegate = new BeginOperationDelegate(this.OnBeginSaveTreatment);
            }
            if ((this.onEndSaveTreatmentDelegate == null)) {
                this.onEndSaveTreatmentDelegate = new EndOperationDelegate(this.OnEndSaveTreatment);
            }
            if ((this.onSaveTreatmentCompletedDelegate == null)) {
                this.onSaveTreatmentCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveTreatmentCompleted);
            }
            base.InvokeAsync(this.onBeginSaveTreatmentDelegate, new object[] {
                        saveList}, this.onEndSaveTreatmentDelegate, this.onSaveTreatmentCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService.BeginListTreatmentMedicine(System.Nullable<int> treatmentMedicineId, System.Nullable<int> treatmnentId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginListTreatmentMedicine(treatmentMedicineId, treatmnentId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<Medical.Apartment.Common.TreatmentMedicine> Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService.EndListTreatmentMedicine(System.IAsyncResult result) {
            return base.Channel.EndListTreatmentMedicine(result);
        }
        
        private System.IAsyncResult OnBeginListTreatmentMedicine(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Nullable<int> treatmentMedicineId = ((System.Nullable<int>)(inValues[0]));
            System.Nullable<int> treatmnentId = ((System.Nullable<int>)(inValues[1]));
            return ((Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService)(this)).BeginListTreatmentMedicine(treatmentMedicineId, treatmnentId, callback, asyncState);
        }
        
        private object[] OnEndListTreatmentMedicine(System.IAsyncResult result) {
            System.Collections.Generic.List<Medical.Apartment.Common.TreatmentMedicine> retVal = ((Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService)(this)).EndListTreatmentMedicine(result);
            return new object[] {
                    retVal};
        }
        
        private void OnListTreatmentMedicineCompleted(object state) {
            if ((this.ListTreatmentMedicineCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ListTreatmentMedicineCompleted(this, new ListTreatmentMedicineCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ListTreatmentMedicineAsync(System.Nullable<int> treatmentMedicineId, System.Nullable<int> treatmnentId) {
            this.ListTreatmentMedicineAsync(treatmentMedicineId, treatmnentId, null);
        }
        
        public void ListTreatmentMedicineAsync(System.Nullable<int> treatmentMedicineId, System.Nullable<int> treatmnentId, object userState) {
            if ((this.onBeginListTreatmentMedicineDelegate == null)) {
                this.onBeginListTreatmentMedicineDelegate = new BeginOperationDelegate(this.OnBeginListTreatmentMedicine);
            }
            if ((this.onEndListTreatmentMedicineDelegate == null)) {
                this.onEndListTreatmentMedicineDelegate = new EndOperationDelegate(this.OnEndListTreatmentMedicine);
            }
            if ((this.onListTreatmentMedicineCompletedDelegate == null)) {
                this.onListTreatmentMedicineCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnListTreatmentMedicineCompleted);
            }
            base.InvokeAsync(this.onBeginListTreatmentMedicineDelegate, new object[] {
                        treatmentMedicineId,
                        treatmnentId}, this.onEndListTreatmentMedicineDelegate, this.onListTreatmentMedicineCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService.BeginSaveTreatmentMedicine(System.Collections.Generic.List<Medical.Apartment.Common.TreatmentMedicine> saveList, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSaveTreatmentMedicine(saveList, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService.EndSaveTreatmentMedicine(System.IAsyncResult result) {
            base.Channel.EndSaveTreatmentMedicine(result);
        }
        
        private System.IAsyncResult OnBeginSaveTreatmentMedicine(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.Generic.List<Medical.Apartment.Common.TreatmentMedicine> saveList = ((System.Collections.Generic.List<Medical.Apartment.Common.TreatmentMedicine>)(inValues[0]));
            return ((Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService)(this)).BeginSaveTreatmentMedicine(saveList, callback, asyncState);
        }
        
        private object[] OnEndSaveTreatmentMedicine(System.IAsyncResult result) {
            ((Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService)(this)).EndSaveTreatmentMedicine(result);
            return null;
        }
        
        private void OnSaveTreatmentMedicineCompleted(object state) {
            if ((this.SaveTreatmentMedicineCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaveTreatmentMedicineCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SaveTreatmentMedicineAsync(System.Collections.Generic.List<Medical.Apartment.Common.TreatmentMedicine> saveList) {
            this.SaveTreatmentMedicineAsync(saveList, null);
        }
        
        public void SaveTreatmentMedicineAsync(System.Collections.Generic.List<Medical.Apartment.Common.TreatmentMedicine> saveList, object userState) {
            if ((this.onBeginSaveTreatmentMedicineDelegate == null)) {
                this.onBeginSaveTreatmentMedicineDelegate = new BeginOperationDelegate(this.OnBeginSaveTreatmentMedicine);
            }
            if ((this.onEndSaveTreatmentMedicineDelegate == null)) {
                this.onEndSaveTreatmentMedicineDelegate = new EndOperationDelegate(this.OnEndSaveTreatmentMedicine);
            }
            if ((this.onSaveTreatmentMedicineCompletedDelegate == null)) {
                this.onSaveTreatmentMedicineCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveTreatmentMedicineCompleted);
            }
            base.InvokeAsync(this.onBeginSaveTreatmentMedicineDelegate, new object[] {
                        saveList}, this.onEndSaveTreatmentMedicineDelegate, this.onSaveTreatmentMedicineCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService.BeginListTreatmentService(System.Nullable<int> treatmentServiceId, System.Nullable<int> treatmnentId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginListTreatmentService(treatmentServiceId, treatmnentId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<Medical.Apartment.Common.TreatmentService> Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService.EndListTreatmentService(System.IAsyncResult result) {
            return base.Channel.EndListTreatmentService(result);
        }
        
        private System.IAsyncResult OnBeginListTreatmentService(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Nullable<int> treatmentServiceId = ((System.Nullable<int>)(inValues[0]));
            System.Nullable<int> treatmnentId = ((System.Nullable<int>)(inValues[1]));
            return ((Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService)(this)).BeginListTreatmentService(treatmentServiceId, treatmnentId, callback, asyncState);
        }
        
        private object[] OnEndListTreatmentService(System.IAsyncResult result) {
            System.Collections.Generic.List<Medical.Apartment.Common.TreatmentService> retVal = ((Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService)(this)).EndListTreatmentService(result);
            return new object[] {
                    retVal};
        }
        
        private void OnListTreatmentServiceCompleted(object state) {
            if ((this.ListTreatmentServiceCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ListTreatmentServiceCompleted(this, new ListTreatmentServiceCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ListTreatmentServiceAsync(System.Nullable<int> treatmentServiceId, System.Nullable<int> treatmnentId) {
            this.ListTreatmentServiceAsync(treatmentServiceId, treatmnentId, null);
        }
        
        public void ListTreatmentServiceAsync(System.Nullable<int> treatmentServiceId, System.Nullable<int> treatmnentId, object userState) {
            if ((this.onBeginListTreatmentServiceDelegate == null)) {
                this.onBeginListTreatmentServiceDelegate = new BeginOperationDelegate(this.OnBeginListTreatmentService);
            }
            if ((this.onEndListTreatmentServiceDelegate == null)) {
                this.onEndListTreatmentServiceDelegate = new EndOperationDelegate(this.OnEndListTreatmentService);
            }
            if ((this.onListTreatmentServiceCompletedDelegate == null)) {
                this.onListTreatmentServiceCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnListTreatmentServiceCompleted);
            }
            base.InvokeAsync(this.onBeginListTreatmentServiceDelegate, new object[] {
                        treatmentServiceId,
                        treatmnentId}, this.onEndListTreatmentServiceDelegate, this.onListTreatmentServiceCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService.BeginSaveTreatmentService(System.Collections.Generic.List<Medical.Apartment.Common.TreatmentService> saveList, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSaveTreatmentService(saveList, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService.EndSaveTreatmentService(System.IAsyncResult result) {
            base.Channel.EndSaveTreatmentService(result);
        }
        
        private System.IAsyncResult OnBeginSaveTreatmentService(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.Generic.List<Medical.Apartment.Common.TreatmentService> saveList = ((System.Collections.Generic.List<Medical.Apartment.Common.TreatmentService>)(inValues[0]));
            return ((Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService)(this)).BeginSaveTreatmentService(saveList, callback, asyncState);
        }
        
        private object[] OnEndSaveTreatmentService(System.IAsyncResult result) {
            ((Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService)(this)).EndSaveTreatmentService(result);
            return null;
        }
        
        private void OnSaveTreatmentServiceCompleted(object state) {
            if ((this.SaveTreatmentServiceCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaveTreatmentServiceCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SaveTreatmentServiceAsync(System.Collections.Generic.List<Medical.Apartment.Common.TreatmentService> saveList) {
            this.SaveTreatmentServiceAsync(saveList, null);
        }
        
        public void SaveTreatmentServiceAsync(System.Collections.Generic.List<Medical.Apartment.Common.TreatmentService> saveList, object userState) {
            if ((this.onBeginSaveTreatmentServiceDelegate == null)) {
                this.onBeginSaveTreatmentServiceDelegate = new BeginOperationDelegate(this.OnBeginSaveTreatmentService);
            }
            if ((this.onEndSaveTreatmentServiceDelegate == null)) {
                this.onEndSaveTreatmentServiceDelegate = new EndOperationDelegate(this.OnEndSaveTreatmentService);
            }
            if ((this.onSaveTreatmentServiceCompletedDelegate == null)) {
                this.onSaveTreatmentServiceCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveTreatmentServiceCompleted);
            }
            base.InvokeAsync(this.onBeginSaveTreatmentServiceDelegate, new object[] {
                        saveList}, this.onEndSaveTreatmentServiceDelegate, this.onSaveTreatmentServiceCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService CreateChannel() {
            return new ApartmentServiceClientChannel(this);
        }
        
        private class ApartmentServiceClientChannel : ChannelBase<Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService>, Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService {
            
            public ApartmentServiceClientChannel(System.ServiceModel.ClientBase<Medical.Apartment.Silverlight.UI.ApartmentService.ApartmentService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginSelectSessionId(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("SelectSessionId", _args, callback, asyncState);
                return _result;
            }
            
            public string EndSelectSessionId(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("SelectSessionId", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetUserLogin(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetUserLogin", _args, callback, asyncState);
                return _result;
            }
            
            public Medical.Apartment.Silverlight.UI.ApartmentService.UserLogin EndGetUserLogin(System.IAsyncResult result) {
                object[] _args = new object[0];
                Medical.Apartment.Silverlight.UI.ApartmentService.UserLogin _result = ((Medical.Apartment.Silverlight.UI.ApartmentService.UserLogin)(base.EndInvoke("GetUserLogin", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetAppSettings(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetAppSettings", _args, callback, asyncState);
                return _result;
            }
            
            public Medical.Apartment.Silverlight.UI.ApartmentService.AppSettings EndGetAppSettings(System.IAsyncResult result) {
                object[] _args = new object[0];
                Medical.Apartment.Silverlight.UI.ApartmentService.AppSettings _result = ((Medical.Apartment.Silverlight.UI.ApartmentService.AppSettings)(base.EndInvoke("GetAppSettings", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetGlobalVariable(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetGlobalVariable", _args, callback, asyncState);
                return _result;
            }
            
            public Medical.Apartment.Silverlight.UI.ApartmentService.GlobalVariable EndGetGlobalVariable(System.IAsyncResult result) {
                object[] _args = new object[0];
                Medical.Apartment.Silverlight.UI.ApartmentService.GlobalVariable _result = ((Medical.Apartment.Silverlight.UI.ApartmentService.GlobalVariable)(base.EndInvoke("GetGlobalVariable", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginChangePassword(string oldPassword, string newPassword, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = oldPassword;
                _args[1] = newPassword;
                System.IAsyncResult _result = base.BeginInvoke("ChangePassword", _args, callback, asyncState);
                return _result;
            }
            
            public int EndChangePassword(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("ChangePassword", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetAspUser(System.Guid userId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = userId;
                System.IAsyncResult _result = base.BeginInvoke("GetAspUser", _args, callback, asyncState);
                return _result;
            }
            
            public Medical.Apartment.Common.AspUser EndGetAspUser(System.IAsyncResult result) {
                object[] _args = new object[0];
                Medical.Apartment.Common.AspUser _result = ((Medical.Apartment.Common.AspUser)(base.EndInvoke("GetAspUser", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDeleteAspUser(Medical.Apartment.Common.AspUser aspUser, System.Nullable<long> employeeId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = aspUser;
                _args[1] = employeeId;
                System.IAsyncResult _result = base.BeginInvoke("DeleteAspUser", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndDeleteAspUser(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("DeleteAspUser", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUnlockAspUser(Medical.Apartment.Common.AspUser oldUser, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = oldUser;
                System.IAsyncResult _result = base.BeginInvoke("UnlockAspUser", _args, callback, asyncState);
                return _result;
            }
            
            public Medical.Apartment.Common.AspUser EndUnlockAspUser(System.IAsyncResult result) {
                object[] _args = new object[0];
                Medical.Apartment.Common.AspUser _result = ((Medical.Apartment.Common.AspUser)(base.EndInvoke("UnlockAspUser", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSaveAspUser(Medical.Apartment.Common.AspUser saveUser, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = saveUser;
                System.IAsyncResult _result = base.BeginInvoke("SaveAspUser", _args, callback, asyncState);
                return _result;
            }
            
            public Medical.Apartment.Common.AspUser EndSaveAspUser(System.IAsyncResult result) {
                object[] _args = new object[0];
                Medical.Apartment.Common.AspUser _result = ((Medical.Apartment.Common.AspUser)(base.EndInvoke("SaveAspUser", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginListCountry(System.Nullable<int> countryId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = countryId;
                System.IAsyncResult _result = base.BeginInvoke("ListCountry", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<Medical.Apartment.Common.Country> EndListCountry(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<Medical.Apartment.Common.Country> _result = ((System.Collections.Generic.List<Medical.Apartment.Common.Country>)(base.EndInvoke("ListCountry", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginListCity(System.Nullable<int> countryid, System.Nullable<int> cityId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = countryid;
                _args[1] = cityId;
                System.IAsyncResult _result = base.BeginInvoke("ListCity", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<Medical.Apartment.Common.City> EndListCity(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<Medical.Apartment.Common.City> _result = ((System.Collections.Generic.List<Medical.Apartment.Common.City>)(base.EndInvoke("ListCity", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginListDistrict(System.Nullable<int> cityId, System.Nullable<int> districtId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = cityId;
                _args[1] = districtId;
                System.IAsyncResult _result = base.BeginInvoke("ListDistrict", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<Medical.Apartment.Common.District> EndListDistrict(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<Medical.Apartment.Common.District> _result = ((System.Collections.Generic.List<Medical.Apartment.Common.District>)(base.EndInvoke("ListDistrict", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginListContactInformation(System.Nullable<int> contactInfoId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = contactInfoId;
                System.IAsyncResult _result = base.BeginInvoke("ListContactInformation", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<Medical.Apartment.Common.ContactInformation> EndListContactInformation(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<Medical.Apartment.Common.ContactInformation> _result = ((System.Collections.Generic.List<Medical.Apartment.Common.ContactInformation>)(base.EndInvoke("ListContactInformation", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSaveContactInformation(System.Collections.Generic.List<Medical.Apartment.Common.ContactInformation> saveList, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = saveList;
                System.IAsyncResult _result = base.BeginInvoke("SaveContactInformation", _args, callback, asyncState);
                return _result;
            }
            
            public void EndSaveContactInformation(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("SaveContactInformation", _args, result);
            }
            
            public System.IAsyncResult BeginListOrganisation(System.Nullable<System.Guid> roleId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = roleId;
                System.IAsyncResult _result = base.BeginInvoke("ListOrganisation", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<Medical.Apartment.Common.Organisation> EndListOrganisation(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<Medical.Apartment.Common.Organisation> _result = ((System.Collections.Generic.List<Medical.Apartment.Common.Organisation>)(base.EndInvoke("ListOrganisation", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginListOrgAdminAspUser(int orgId, System.Guid roleId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = orgId;
                _args[1] = roleId;
                System.IAsyncResult _result = base.BeginInvoke("ListOrgAdminAspUser", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<Medical.Apartment.Common.AspUser> EndListOrgAdminAspUser(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<Medical.Apartment.Common.AspUser> _result = ((System.Collections.Generic.List<Medical.Apartment.Common.AspUser>)(base.EndInvoke("ListOrgAdminAspUser", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSaveOrganisations(System.Collections.Generic.List<Medical.Apartment.Common.Organisation> saveList, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = saveList;
                System.IAsyncResult _result = base.BeginInvoke("SaveOrganisations", _args, callback, asyncState);
                return _result;
            }
            
            public void EndSaveOrganisations(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("SaveOrganisations", _args, result);
            }
            
            public System.IAsyncResult BeginGetOrganisation(int organisationId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = organisationId;
                System.IAsyncResult _result = base.BeginInvoke("GetOrganisation", _args, callback, asyncState);
                return _result;
            }
            
            public Medical.Apartment.Common.Organisation EndGetOrganisation(System.IAsyncResult result) {
                object[] _args = new object[0];
                Medical.Apartment.Common.Organisation _result = ((Medical.Apartment.Common.Organisation)(base.EndInvoke("GetOrganisation", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetOrganisationByCode(string authorisationCode, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = authorisationCode;
                System.IAsyncResult _result = base.BeginInvoke("GetOrganisationByCode", _args, callback, asyncState);
                return _result;
            }
            
            public Medical.Apartment.Common.Organisation EndGetOrganisationByCode(System.IAsyncResult result) {
                object[] _args = new object[0];
                Medical.Apartment.Common.Organisation _result = ((Medical.Apartment.Common.Organisation)(base.EndInvoke("GetOrganisationByCode", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginListSite(System.Nullable<int> orgId, System.Nullable<int> siteId, bool showLegacy, bool loadContact, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = orgId;
                _args[1] = siteId;
                _args[2] = showLegacy;
                _args[3] = loadContact;
                System.IAsyncResult _result = base.BeginInvoke("ListSite", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<Medical.Apartment.Common.Site> EndListSite(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<Medical.Apartment.Common.Site> _result = ((System.Collections.Generic.List<Medical.Apartment.Common.Site>)(base.EndInvoke("ListSite", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSaveSite(System.Collections.Generic.List<Medical.Apartment.Common.Site> saveList, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = saveList;
                System.IAsyncResult _result = base.BeginInvoke("SaveSite", _args, callback, asyncState);
                return _result;
            }
            
            public void EndSaveSite(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("SaveSite", _args, result);
            }
            
            public System.IAsyncResult BeginListCustomer(System.Nullable<int> orgId, System.Nullable<int> siteId, System.Nullable<int> customerId, string firstName, string lastName, bool hasContracts, System.Nullable<System.DateTime> contractDateStart, System.Nullable<System.DateTime> contractDateEnd, bool includeLegacy, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[9];
                _args[0] = orgId;
                _args[1] = siteId;
                _args[2] = customerId;
                _args[3] = firstName;
                _args[4] = lastName;
                _args[5] = hasContracts;
                _args[6] = contractDateStart;
                _args[7] = contractDateEnd;
                _args[8] = includeLegacy;
                System.IAsyncResult _result = base.BeginInvoke("ListCustomer", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<Medical.Apartment.Common.Customer> EndListCustomer(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<Medical.Apartment.Common.Customer> _result = ((System.Collections.Generic.List<Medical.Apartment.Common.Customer>)(base.EndInvoke("ListCustomer", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSaveCustomer(System.Collections.Generic.List<Medical.Apartment.Common.Customer> saveList, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = saveList;
                System.IAsyncResult _result = base.BeginInvoke("SaveCustomer", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<Medical.Apartment.Common.Customer> EndSaveCustomer(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<Medical.Apartment.Common.Customer> _result = ((System.Collections.Generic.List<Medical.Apartment.Common.Customer>)(base.EndInvoke("SaveCustomer", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginListDoctor(System.Nullable<int> orgId, System.Nullable<int> siteId, System.Nullable<int> doctorId, string firstName, string lastName, bool includeLegacy, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[6];
                _args[0] = orgId;
                _args[1] = siteId;
                _args[2] = doctorId;
                _args[3] = firstName;
                _args[4] = lastName;
                _args[5] = includeLegacy;
                System.IAsyncResult _result = base.BeginInvoke("ListDoctor", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<Medical.Apartment.Common.Doctor> EndListDoctor(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<Medical.Apartment.Common.Doctor> _result = ((System.Collections.Generic.List<Medical.Apartment.Common.Doctor>)(base.EndInvoke("ListDoctor", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSaveDoctor(System.Collections.Generic.List<Medical.Apartment.Common.Doctor> saveList, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = saveList;
                System.IAsyncResult _result = base.BeginInvoke("SaveDoctor", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<Medical.Apartment.Common.Doctor> EndSaveDoctor(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<Medical.Apartment.Common.Doctor> _result = ((System.Collections.Generic.List<Medical.Apartment.Common.Doctor>)(base.EndInvoke("SaveDoctor", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginListAspUser(System.Nullable<int> orgId, System.Nullable<System.Guid> userId, System.Nullable<bool> isLegacy, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = orgId;
                _args[1] = userId;
                _args[2] = isLegacy;
                System.IAsyncResult _result = base.BeginInvoke("ListAspUser", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<Medical.Apartment.Common.AspUser> EndListAspUser(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<Medical.Apartment.Common.AspUser> _result = ((System.Collections.Generic.List<Medical.Apartment.Common.AspUser>)(base.EndInvoke("ListAspUser", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginListUserName(string applicationName, System.Nullable<int> orgId, string startsWith, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = applicationName;
                _args[1] = orgId;
                _args[2] = startsWith;
                System.IAsyncResult _result = base.BeginInvoke("ListUserName", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<string> EndListUserName(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<string> _result = ((System.Collections.Generic.List<string>)(base.EndInvoke("ListUserName", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUpdateMembershipUserName(string applicationName, string userName, string newUserName, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = applicationName;
                _args[1] = userName;
                _args[2] = newUserName;
                System.IAsyncResult _result = base.BeginInvoke("UpdateMembershipUserName", _args, callback, asyncState);
                return _result;
            }
            
            public System.Nullable<int> EndUpdateMembershipUserName(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Nullable<int> _result = ((System.Nullable<int>)(base.EndInvoke("UpdateMembershipUserName", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginListComponent(System.Nullable<int> componentId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = componentId;
                System.IAsyncResult _result = base.BeginInvoke("ListComponent", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<Medical.Apartment.Common.Component> EndListComponent(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<Medical.Apartment.Common.Component> _result = ((System.Collections.Generic.List<Medical.Apartment.Common.Component>)(base.EndInvoke("ListComponent", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginListRoleComponentPermission(System.Nullable<System.Guid> roleId, System.Nullable<int> componentId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = roleId;
                _args[1] = componentId;
                System.IAsyncResult _result = base.BeginInvoke("ListRoleComponentPermission", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<Medical.Apartment.Common.RoleComponentPermission> EndListRoleComponentPermission(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<Medical.Apartment.Common.RoleComponentPermission> _result = ((System.Collections.Generic.List<Medical.Apartment.Common.RoleComponentPermission>)(base.EndInvoke("ListRoleComponentPermission", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginListRoleComponentPermissionByUser(System.Nullable<System.Guid> userId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = userId;
                System.IAsyncResult _result = base.BeginInvoke("ListRoleComponentPermissionByUser", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<Medical.Apartment.Common.RoleComponentPermission> EndListRoleComponentPermissionByUser(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<Medical.Apartment.Common.RoleComponentPermission> _result = ((System.Collections.Generic.List<Medical.Apartment.Common.RoleComponentPermission>)(base.EndInvoke("ListRoleComponentPermissionByUser", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSaveRoleComponentPermission(System.Collections.Generic.List<Medical.Apartment.Common.RoleComponentPermission> saveList, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = saveList;
                System.IAsyncResult _result = base.BeginInvoke("SaveRoleComponentPermission", _args, callback, asyncState);
                return _result;
            }
            
            public void EndSaveRoleComponentPermission(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("SaveRoleComponentPermission", _args, result);
            }
            
            public System.IAsyncResult BeginListAspRole(System.Nullable<System.Guid> roleId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = roleId;
                System.IAsyncResult _result = base.BeginInvoke("ListAspRole", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<Medical.Apartment.Common.AspRole> EndListAspRole(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<Medical.Apartment.Common.AspRole> _result = ((System.Collections.Generic.List<Medical.Apartment.Common.AspRole>)(base.EndInvoke("ListAspRole", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSaveAspRole(System.Collections.Generic.List<Medical.Apartment.Common.AspRole> saveList, string currentUser, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = saveList;
                _args[1] = currentUser;
                System.IAsyncResult _result = base.BeginInvoke("SaveAspRole", _args, callback, asyncState);
                return _result;
            }
            
            public void EndSaveAspRole(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("SaveAspRole", _args, result);
            }
            
            public System.IAsyncResult BeginListUserRoleAuth(System.Nullable<int> orgId, System.Nullable<System.Guid> userId, System.Nullable<System.Guid> roleId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = orgId;
                _args[1] = userId;
                _args[2] = roleId;
                System.IAsyncResult _result = base.BeginInvoke("ListUserRoleAuth", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<Medical.Apartment.Common.UserRoleAuth> EndListUserRoleAuth(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<Medical.Apartment.Common.UserRoleAuth> _result = ((System.Collections.Generic.List<Medical.Apartment.Common.UserRoleAuth>)(base.EndInvoke("ListUserRoleAuth", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSaveUserRoleAuth(System.Collections.Generic.List<Medical.Apartment.Common.UserRoleAuth> saveList, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = saveList;
                System.IAsyncResult _result = base.BeginInvoke("SaveUserRoleAuth", _args, callback, asyncState);
                return _result;
            }
            
            public void EndSaveUserRoleAuth(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("SaveUserRoleAuth", _args, result);
            }
            
            public System.IAsyncResult BeginListMedicine(System.Nullable<int> organisationId, System.Nullable<int> medicineId, bool showLegacy, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = organisationId;
                _args[1] = medicineId;
                _args[2] = showLegacy;
                System.IAsyncResult _result = base.BeginInvoke("ListMedicine", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<Medical.Apartment.Common.Medicine> EndListMedicine(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<Medical.Apartment.Common.Medicine> _result = ((System.Collections.Generic.List<Medical.Apartment.Common.Medicine>)(base.EndInvoke("ListMedicine", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSaveMedicine(System.Collections.Generic.List<Medical.Apartment.Common.Medicine> saveList, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = saveList;
                System.IAsyncResult _result = base.BeginInvoke("SaveMedicine", _args, callback, asyncState);
                return _result;
            }
            
            public void EndSaveMedicine(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("SaveMedicine", _args, result);
            }
            
            public System.IAsyncResult BeginListSiteMedicineStatus(int siteId, System.Nullable<int> medicineId, System.DateTime dateFrom, System.DateTime dateTo, bool showLegacy, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[5];
                _args[0] = siteId;
                _args[1] = medicineId;
                _args[2] = dateFrom;
                _args[3] = dateTo;
                _args[4] = showLegacy;
                System.IAsyncResult _result = base.BeginInvoke("ListSiteMedicineStatus", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<Medical.Apartment.Common.Medicine> EndListSiteMedicineStatus(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<Medical.Apartment.Common.Medicine> _result = ((System.Collections.Generic.List<Medical.Apartment.Common.Medicine>)(base.EndInvoke("ListSiteMedicineStatus", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginListMedicineInput(int siteId, System.Nullable<int> medicineId, System.DateTime dateFrom, System.DateTime dateTo, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = siteId;
                _args[1] = medicineId;
                _args[2] = dateFrom;
                _args[3] = dateTo;
                System.IAsyncResult _result = base.BeginInvoke("ListMedicineInput", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<Medical.Apartment.Common.MedicineInput> EndListMedicineInput(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<Medical.Apartment.Common.MedicineInput> _result = ((System.Collections.Generic.List<Medical.Apartment.Common.MedicineInput>)(base.EndInvoke("ListMedicineInput", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSaveMedicineInput(System.Collections.Generic.List<Medical.Apartment.Common.MedicineInput> saveList, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = saveList;
                System.IAsyncResult _result = base.BeginInvoke("SaveMedicineInput", _args, callback, asyncState);
                return _result;
            }
            
            public void EndSaveMedicineInput(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("SaveMedicineInput", _args, result);
            }
            
            public System.IAsyncResult BeginListService(System.Nullable<int> organisationId, System.Nullable<int> serviceId, bool showLegacy, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = organisationId;
                _args[1] = serviceId;
                _args[2] = showLegacy;
                System.IAsyncResult _result = base.BeginInvoke("ListService", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<Medical.Apartment.Common.Service> EndListService(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<Medical.Apartment.Common.Service> _result = ((System.Collections.Generic.List<Medical.Apartment.Common.Service>)(base.EndInvoke("ListService", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSaveService(System.Collections.Generic.List<Medical.Apartment.Common.Service> saveList, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = saveList;
                System.IAsyncResult _result = base.BeginInvoke("SaveService", _args, callback, asyncState);
                return _result;
            }
            
            public void EndSaveService(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("SaveService", _args, result);
            }
            
            public System.IAsyncResult BeginListImage(System.Nullable<int> imageId, System.Nullable<int> itemId, System.Nullable<int> imageTypeId, int loadType, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = imageId;
                _args[1] = itemId;
                _args[2] = imageTypeId;
                _args[3] = loadType;
                System.IAsyncResult _result = base.BeginInvoke("ListImage", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<Medical.Apartment.Common.Image> EndListImage(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<Medical.Apartment.Common.Image> _result = ((System.Collections.Generic.List<Medical.Apartment.Common.Image>)(base.EndInvoke("ListImage", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSaveImage(System.Collections.Generic.List<Medical.Apartment.Common.Image> saveList, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = saveList;
                System.IAsyncResult _result = base.BeginInvoke("SaveImage", _args, callback, asyncState);
                return _result;
            }
            
            public void EndSaveImage(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("SaveImage", _args, result);
            }
            
            public System.IAsyncResult BeginListTreatment(int orgId, System.Nullable<int> siteId, System.Nullable<int> customerId, System.Nullable<int> doctorId, System.Nullable<int> treatmentId, System.Nullable<System.DateTime> dateStart, System.Nullable<System.DateTime> dateEnd, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[7];
                _args[0] = orgId;
                _args[1] = siteId;
                _args[2] = customerId;
                _args[3] = doctorId;
                _args[4] = treatmentId;
                _args[5] = dateStart;
                _args[6] = dateEnd;
                System.IAsyncResult _result = base.BeginInvoke("ListTreatment", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<Medical.Apartment.Common.Treatment> EndListTreatment(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<Medical.Apartment.Common.Treatment> _result = ((System.Collections.Generic.List<Medical.Apartment.Common.Treatment>)(base.EndInvoke("ListTreatment", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSaveTreatment(System.Collections.Generic.List<Medical.Apartment.Common.Treatment> saveList, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = saveList;
                System.IAsyncResult _result = base.BeginInvoke("SaveTreatment", _args, callback, asyncState);
                return _result;
            }
            
            public void EndSaveTreatment(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("SaveTreatment", _args, result);
            }
            
            public System.IAsyncResult BeginListTreatmentMedicine(System.Nullable<int> treatmentMedicineId, System.Nullable<int> treatmnentId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = treatmentMedicineId;
                _args[1] = treatmnentId;
                System.IAsyncResult _result = base.BeginInvoke("ListTreatmentMedicine", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<Medical.Apartment.Common.TreatmentMedicine> EndListTreatmentMedicine(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<Medical.Apartment.Common.TreatmentMedicine> _result = ((System.Collections.Generic.List<Medical.Apartment.Common.TreatmentMedicine>)(base.EndInvoke("ListTreatmentMedicine", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSaveTreatmentMedicine(System.Collections.Generic.List<Medical.Apartment.Common.TreatmentMedicine> saveList, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = saveList;
                System.IAsyncResult _result = base.BeginInvoke("SaveTreatmentMedicine", _args, callback, asyncState);
                return _result;
            }
            
            public void EndSaveTreatmentMedicine(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("SaveTreatmentMedicine", _args, result);
            }
            
            public System.IAsyncResult BeginListTreatmentService(System.Nullable<int> treatmentServiceId, System.Nullable<int> treatmnentId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = treatmentServiceId;
                _args[1] = treatmnentId;
                System.IAsyncResult _result = base.BeginInvoke("ListTreatmentService", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<Medical.Apartment.Common.TreatmentService> EndListTreatmentService(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<Medical.Apartment.Common.TreatmentService> _result = ((System.Collections.Generic.List<Medical.Apartment.Common.TreatmentService>)(base.EndInvoke("ListTreatmentService", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSaveTreatmentService(System.Collections.Generic.List<Medical.Apartment.Common.TreatmentService> saveList, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = saveList;
                System.IAsyncResult _result = base.BeginInvoke("SaveTreatmentService", _args, callback, asyncState);
                return _result;
            }
            
            public void EndSaveTreatmentService(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("SaveTreatmentService", _args, result);
            }
        }
    }
}
